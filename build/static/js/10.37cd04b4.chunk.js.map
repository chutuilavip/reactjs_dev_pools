{"version":3,"file":"static/js/10.37cd04b4.chunk.js","mappings":"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","sources":["pages/Register/styled.js","pages/Register/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WrapRegister = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #131313;\r\n  .title_form {\r\n    margin-top: 50px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .switch_register_type {\r\n    margin-bottom: 2rem;\r\n    label {\r\n      user-select: none;\r\n      cursor: pointer;\r\n      color: white;\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormRegis = styled.form`\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"43%\"};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StepOne = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 14px;\r\n  position: absolute;\r\n  opacity: ${({ status }) => (status ? 1 : 0)};\r\n  z-index: ${({ status }) => (status ? 99 : -99)};\r\n  .btn_form {\r\n    background-color: #3b72fe;\r\n    padding: 14px 0;\r\n    width: 100%;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n  .input_form_last {\r\n    width: 100%;\r\n    background-color: #212121;\r\n    padding: 17px 50px;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst ListInput = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  input {\r\n    background-color: #212121;\r\n    padding: 17px 50px;\r\n    width: 50%;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\n// Step two\r\n\r\nconst StepTwo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 50px;\r\n  position: absolute;\r\n  opacity: ${({ status }) => (!status ? 1 : 0)};\r\n  z-index: ${({ status }) => (!status ? 99 : -99)};\r\n`;\r\n\r\nconst ListApp = styled.div`\r\n  background-color: #1c212f;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  max-width: 536px;\r\n  height: auto;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  .list_app_footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    margin-top: 2rem;\r\n    span {\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #3b72fe;\r\n    }\r\n    p {\r\n      font-size: 11px;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  .step_two_header {\r\n    h3 {\r\n      font-weight: 700;\r\n      font-size: 32px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n    }\r\n    p {\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n      letter-spacing: 0.0025em;\r\n      color: #9e9e9e;\r\n    }\r\n  }\r\n  .apps {\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    width: 85%;\r\n    margin: 0 auto;\r\n    .bg_app {\r\n      background-color: #ffffff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 90px;\r\n      height: 90px;\r\n    }\r\n    .list_app_footer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-end;\r\n      width: 100%;\r\n      margin-top: 2rem;\r\n      span {\r\n        font-weight: 400;\r\n        font-size: 11px;\r\n        letter-spacing: 0.0025em;\r\n        color: #3b72fe;\r\n      }\r\n      p {\r\n        font-size: 11px;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormMeta = styled.div`\r\n  background-color: #1c212f;\r\n  padding: 20px;\r\n  max-width: 536px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  gap: 45px;\r\n  h3 {\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  p {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n  }\r\n  .form_connect {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    .input_meta {\r\n      background: #212121;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n      padding: 15px;\r\n      width: 100%;\r\n    }\r\n    .input_top {\r\n      display: flex;\r\n      width: 85%;\r\n      gap: 20px;\r\n    }\r\n    .btn_QR {\r\n      background: #212121;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      line-height: 130%;\r\n      color: #ffffff;\r\n      padding: 12px 0;\r\n      width: 85%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .btn_connectWallet {\r\n    background: #3b72fe;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    width: 100%;\r\n    padding: 12px 0;\r\n  }\r\n  .or {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 11px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst ListBtnStep = styled.div`\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  letter-spacing: 0.0025em;\r\n  color: #9e9e9e;\r\n  display: flex;\r\n  .btn_step {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #1c212f;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .btn_step_active {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #181818;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    border: 2px solid #3b72fe;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\nexport {\r\n  WrapRegister,\r\n  FormRegis,\r\n  StepOne,\r\n  ListInput,\r\n  ListBtnStep,\r\n  StepTwo,\r\n  FormMeta,\r\n  ListApp,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport global from \"../../assets/register/global.png\";\r\nimport K from \"../../assets/register/K.png\";\r\nimport ledger from \"../../assets/register/ledger.png\";\r\nimport maskGroup from \"../../assets/register/maskGroup.png\";\r\nimport mastercard from \"../../assets/register/mastercard.png\";\r\nimport metaMask from \"../../assets/register/metaMask.png\";\r\nimport payPal from \"../../assets/register/payPal.png\";\r\nimport spaces from \"../../assets/register/spaces.png\";\r\nimport Visa from \"../../assets/register/Visa.png\";\r\nimport walletConnect from \"../../assets/register/walletConnect.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { variants } from \"../../helpers/motion\";\r\nimport {\r\n  FormMeta,\r\n  FormRegis,\r\n  ListApp,\r\n  ListBtnStep,\r\n  ListInput,\r\n  StepOne,\r\n  StepTwo,\r\n  WrapRegister,\r\n} from \"./styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerPublisher, registerUser } from \"../../redux/slice/user.slice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Switch } from \"antd\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst arrWallet = [\r\n  global,\r\n  K,\r\n  ledger,\r\n  maskGroup,\r\n  mastercard,\r\n  metaMask,\r\n  payPal,\r\n  spaces,\r\n  Visa,\r\n  walletConnect,\r\n];\r\n\r\nconst Register = () => {\r\n  const [isRegisterForPublisher, setIsRegisterForPublisher] = useState(true);\r\n  const [step, setStep] = useState(true);\r\n  const fieldsValues = useRef();\r\n  const { register, handleSubmit, reset, getValues } = useForm();\r\n  const dispatch = useDispatch();\r\n  const { statusRegis, errors } = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n  const onSubmit = (data) => {\r\n    if (!isRegisterForPublisher) {\r\n      dispatch(registerUser(data));\r\n      if (statusRegis.status === 200) {\r\n        console.log(\"--------------------------------\", statusRegis.status);\r\n        navigate(\"/login\");\r\n      }\r\n    } else {\r\n      dispatch(registerPublisher(data));\r\n      if (statusRegis.status === 200) {\r\n        console.log(\"--------------------2222------------\");\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  };\r\n  const switchRegisterType = (checked) => {\r\n    setIsRegisterForPublisher(checked);\r\n    const values = getValues();\r\n    fieldsValues.current = values;\r\n  };\r\n  // useEffect(() => {\r\n  //   if (errors) {\r\n  //     const keys = Object.keys(errors?.register?.errors);\r\n  //     keys.forEach((el) => {\r\n  //       toast.error(errors?.register?.errors[el][0]);\r\n  //     });\r\n  //   }\r\n  //   toast.clearWaitingQueue();\r\n  // }, [errors]);\r\n\r\n  return (\r\n    <motion.main\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"hidden\"\r\n    >\r\n      <WrapRegister>\r\n        <h3 className=\"title_form\">CREATE ACOUNT</h3>\r\n        <div className=\"switch_register_type\">\r\n          <label htmlFor=\"switch_register_type\">Register for Publisher</label>\r\n        </div>\r\n        <FormRegis\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          height={isRegisterForPublisher ? \"72%\" : \"43%\"}\r\n        >\r\n          <StepOne status={step}>\r\n            {isRegisterForPublisher && (\r\n              <>\r\n                <ListInput>\r\n                  <input\r\n                    placeholder=\"Business Name *\"\r\n                    type=\"text\"\r\n                    defaultValue={fieldsValues.current?.business_name}\r\n                    {...register(\"business_name\", {\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Contact Name *\"\r\n                    type=\"text\"\r\n                    {...register(\"contact_name\")}\r\n                  />\r\n                </ListInput>\r\n                <ListInput>\r\n                  <input\r\n                    placeholder=\"Website *\"\r\n                    type=\"text\"\r\n                    {...register(\"website\")}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Products and Services *\"\r\n                    type=\"text\"\r\n                    {...register(\"product_and_services\")}\r\n                  />\r\n                </ListInput>\r\n                <ListInput>\r\n                  <input\r\n                    placeholder=\"Release details *\"\r\n                    type=\"text\"\r\n                    {...register(\"release_details\")}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Products URL *\"\r\n                    type=\"text\"\r\n                    {...register(\"products_url\")}\r\n                  />\r\n                </ListInput>\r\n                <ListInput>\r\n                  <input\r\n                    placeholder=\"Year Established *\"\r\n                    type=\"text\"\r\n                    {...register(\"year_established\")}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Application catalog *\"\r\n                    type=\"text\"\r\n                    {...register(\"application_catalog\")}\r\n                  />\r\n                </ListInput>\r\n              </>\r\n            )}\r\n            <ListInput>\r\n              <input\r\n                placeholder=\"First Name *\"\r\n                type=\"text\"\r\n                {...register(\"first_name\")}\r\n              />\r\n              <input\r\n                placeholder=\"Last Name *\"\r\n                type=\"text\"\r\n                {...register(\"last_name\")}\r\n              />\r\n            </ListInput>\r\n            <ListInput>\r\n              <input placeholder=\"Email *\" type=\"text\" {...register(\"email\")} />\r\n              <input\r\n                placeholder=\"Phone Number *\"\r\n                type=\"text\"\r\n                {...register(\"phone_number\")}\r\n              />\r\n            </ListInput>\r\n            <ListInput>\r\n              <input\r\n                placeholder=\"Password *\"\r\n                type=\"password\"\r\n                {...register(\"password\", { required: true, minLength: 6 })}\r\n              />\r\n              <input\r\n                placeholder=\"Confirm Password *\"\r\n                type=\"password\"\r\n                {...register(\"password_confirmation\", {\r\n                  required: true,\r\n                  minLength: 6,\r\n                })}\r\n              />\r\n            </ListInput>\r\n            <input\r\n              placeholder=\"Address\"\r\n              type=\"text\"\r\n              className=\"input_form_last\"\r\n              {...register(\"address\")}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn_form\"\r\n              // onClick={() => {\r\n              //   setStep(false);\r\n              // }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </StepOne>\r\n\r\n          {/* <StepTwo status={step}>\r\n            <ListApp>\r\n              <div className=\"step_two_header\">\r\n                <h3>Connect Wallet</h3>\r\n                <p>\r\n                  Seclect what network and wallet you want to connect bellow\r\n                </p>\r\n              </div>\r\n              <div className=\"apps\">\r\n                {arrWallet.map((app, index) => {\r\n                  return (\r\n                    <div className=\"bg_app\" key={index}>\r\n                      <img src={app} alt=\"app\" />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"list_app_footer\">\r\n                <span>What’s wallet?</span>\r\n                <p>\r\n                  Can’t find your wallet? <span>Suggest Defi Walllet</span>\r\n                </p>\r\n              </div>\r\n            </ListApp>\r\n            <FormMeta>\r\n              <div>\r\n                <h3>MetaMask</h3>\r\n                <p>\r\n                  MetaMask provides the simplest yet most secure way to connect\r\n                  to blockchain-based applications. You are always in control\r\n                  when interacting on the new decentralized web.\r\n                </p>\r\n              </div>\r\n              <div className=\"form_connect\">\r\n                <div className=\"input_top\">\r\n                  <input\r\n                    placeholder=\"Card Number\"\r\n                    type=\"text\"\r\n                    className=\"input_meta\"\r\n                    {...register(\"cardNumber\")}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Expiration Date\"\r\n                    type=\"text\"\r\n                    className=\"input_meta\"\r\n                    {...register(\"expirationDate\", {\r\n                      required: true,\r\n                      minLength: 6,\r\n                    })}\r\n                  />\r\n                </div>\r\n                <input\r\n                  style={{ width: \"85%\" }}\r\n                  placeholder=\"Name\"\r\n                  type=\"text\"\r\n                  className=\"input_meta\"\r\n                  {...register(\"name\")}\r\n                />\r\n                <p className=\"or\">Or</p>\r\n                <button className=\"btn_QR\">Connect with QR code</button>\r\n              </div>\r\n              <button className=\"btn_connectWallet\">Connect Wallet</button>\r\n            </FormMeta>\r\n          </StepTwo> */}\r\n        </FormRegis>\r\n\r\n        {/* List btn step */}\r\n        {/* <ListBtnStep>\r\n          <div\r\n            className={`${step ? \"btn_step_active\" : \"btn_step\"}`}\r\n            onClick={() => {\r\n              setStep(true);\r\n            }}\r\n          >\r\n            <span>Step 1</span>\r\n            <span>Create Acount</span>\r\n          </div>\r\n          <div\r\n            className={`${!step ? \"btn_step_active\" : \"btn_step\"}`}\r\n            onClick={() => {\r\n              setStep(false);\r\n            }}\r\n          >\r\n            <span>Step 2</span>\r\n            <span>Connect Wallet</span>\r\n          </div>\r\n        </ListBtnStep> */}\r\n      </WrapRegister>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["WrapRegister","styled","FormRegis","props","height","StepOne","status","ListInput","useState","isRegisterForPublisher","step","fieldsValues","useRef","useForm","register","handleSubmit","dispatch","reset","getValues","useDispatch","useSelector","state","user","statusRegis","navigate","errors","useNavigate","motion","variants","initial","animate","exit","className","htmlFor","onSubmit","data","registerPublisher","console","log","registerUser","placeholder","type","defaultValue","current","business_name","required","minLength"],"sourceRoot":""}