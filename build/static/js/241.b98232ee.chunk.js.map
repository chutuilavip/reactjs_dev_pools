{"version":3,"file":"static/js/241.b98232ee.chunk.js","mappings":"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","sources":["pages/Register/styled.js","pages/Register/registerItul.js","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst WrapRegister = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #131313;\r\n  .title_form {\r\n    margin-top: 50px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .validateMessage {\r\n    color: red;\r\n    font-size: 2rem;\r\n  }\r\n  .switch_register_type {\r\n    margin-bottom: 2rem;\r\n    label {\r\n      user-select: none;\r\n      cursor: pointer;\r\n      color: white;\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormRegis = styled.form`\r\n  width: 100%;\r\n  height: ${(props) => props.height || '43%'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  margin-bottom: 10rem;\r\n`;\r\n\r\nconst StepOne = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 14px;\r\n  opacity: ${({ status }) => (status ? 1 : 0)};\r\n  z-index: ${({ status }) => (status ? 99 : -99)};\r\n  .btn_form {\r\n    background-color: #3b72fe;\r\n    padding: 14px 0;\r\n    width: 100%;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n  .input_form_last {\r\n    width: 100%;\r\n    background-color: #212121;\r\n    padding: 1.5rem;\r\n    color: #ffffff;\r\n  }\r\n  .field_item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 10rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ListInput = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  input {\r\n    background-color: #212121;\r\n    padding: 17px 50px;\r\n    width: 100%;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\n// Step two\r\n\r\nconst StepTwo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 50px;\r\n  position: absolute;\r\n  opacity: ${({ status }) => (!status ? 1 : 0)};\r\n  z-index: ${({ status }) => (!status ? 99 : -99)};\r\n`;\r\n\r\nconst ListApp = styled.div`\r\n  background-color: #1c212f;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  max-width: 536px;\r\n  height: auto;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  .list_app_footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    margin-top: 2rem;\r\n    span {\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #3b72fe;\r\n    }\r\n    p {\r\n      font-size: 11px;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  .step_two_header {\r\n    h3 {\r\n      font-weight: 700;\r\n      font-size: 32px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n    }\r\n    p {\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n      letter-spacing: 0.0025em;\r\n      color: #9e9e9e;\r\n    }\r\n  }\r\n  .apps {\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    width: 85%;\r\n    margin: 0 auto;\r\n    .bg_app {\r\n      background-color: #ffffff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 90px;\r\n      height: 90px;\r\n    }\r\n    .list_app_footer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-end;\r\n      width: 100%;\r\n      margin-top: 2rem;\r\n      span {\r\n        font-weight: 400;\r\n        font-size: 11px;\r\n        letter-spacing: 0.0025em;\r\n        color: #3b72fe;\r\n      }\r\n      p {\r\n        font-size: 11px;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormMeta = styled.div`\r\n  background-color: #1c212f;\r\n  padding: 20px;\r\n  max-width: 536px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  gap: 45px;\r\n  h3 {\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  p {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n  }\r\n  .form_connect {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    .input_meta {\r\n      background: #212121;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n      padding: 15px;\r\n      width: 100%;\r\n    }\r\n    .input_top {\r\n      display: flex;\r\n      width: 85%;\r\n      gap: 20px;\r\n    }\r\n    .btn_QR {\r\n      background: #212121;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      line-height: 130%;\r\n      color: #ffffff;\r\n      padding: 12px 0;\r\n      width: 85%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .btn_connectWallet {\r\n    background: #3b72fe;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    width: 100%;\r\n    padding: 12px 0;\r\n  }\r\n  .or {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 11px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst ListBtnStep = styled.div`\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  letter-spacing: 0.0025em;\r\n  color: #9e9e9e;\r\n  display: flex;\r\n  .btn_step {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #1c212f;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .btn_step_active {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #181818;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    border: 2px solid #3b72fe;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\nexport { WrapRegister, FormRegis, StepOne, ListInput, ListBtnStep, StepTwo, FormMeta, ListApp };\r\n","import * as yup from \"yup\";\r\nexport const InputData = [\r\n  {\r\n    field_1: {\r\n      placeholder: \"Business Name *\",\r\n      register: \"business_name\",\r\n    },\r\n    field_2: {\r\n      placeholder: \"Contact Name *\",\r\n      register: \"contact_name\",\r\n    },\r\n  },\r\n  {\r\n    field_1: {\r\n      placeholder: \"Website *\",\r\n      register: \"website\",\r\n    },\r\n    field_2: {\r\n      placeholder: \"Products and Services *\",\r\n      register: \"product_and_services\",\r\n    },\r\n  },\r\n\r\n  // {\r\n  //   field_1: {\r\n  //     placeholder: \"Release details *\",\r\n  //     register: \"release_details\",\r\n  //   },\r\n  //   field_2: {\r\n  //     placeholder: \"Products URL *\",\r\n  //     register: \"products_url\",\r\n  //   },\r\n  // },\r\n  // {\r\n  //   field_1: {\r\n  //     placeholder: \"Year Established *\",\r\n  //     register: \"year_established\",\r\n  //     type: \"number\",\r\n  //   },\r\n  //   field_2: {\r\n  //     placeholder: \"Application catalog *\",\r\n  //     register: \"application_catalog\",\r\n  //   },\r\n  // },\r\n  {\r\n    field_1: {\r\n      placeholder: \"First Name *\",\r\n      register: \"first_name\",\r\n    },\r\n    field_2: {\r\n      placeholder: \"Last Name *\",\r\n      register: \"last_name\",\r\n    },\r\n  },\r\n  {\r\n    field_1: {\r\n      placeholder: \"Email*\",\r\n      register: \"email\",\r\n    },\r\n    field_2: {\r\n      placeholder: \"Phone Number *\",\r\n      register: \"phone_number\",\r\n    },\r\n  },\r\n  {\r\n    field_1: {\r\n      placeholder: \"Password *\",\r\n      register: \"password\",\r\n      type: \"password\",\r\n    },\r\n    field_2: {\r\n      placeholder: \"Confirm Password *\",\r\n      register: \"password_confirmation\",\r\n      type: \"password\",\r\n    },\r\n  },\r\n];\r\nexport const schema = yup\r\n  .object({\r\n    first_name: yup\r\n      .string()\r\n      .required(\"First name is required\")\r\n      .min(2, \"Min length of First Name is 2\")\r\n      .max(10, \"Max length of First Name is 10\"),\r\n    last_name: yup\r\n      .string()\r\n      .required(\"Last name is required\")\r\n      .min(2, \"Min length validate message\")\r\n      .max(10),\r\n    email: yup\r\n      .string()\r\n      .required(\"Email is required\")\r\n      .email(\"Invalid email address\"),\r\n    phone_number: yup.string().required(\"Phone number is required\"),\r\n    business_name: yup.string().required(\"Business name is required\"),\r\n    // application_catalog: yup\r\n    //   .string()\r\n    //   .required(\"Application catalog is required\"),\r\n    contact_name: yup.string().required(\"Contact name is required\"),\r\n    product_and_services: yup\r\n      .string()\r\n      .required(\"Products and Services are required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    // products_url: yup\r\n    //   .string()\r\n    //   .required(\"Products url is required\")\r\n    //   .matches(\r\n    //     /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n    //     \"Enter correct url!\"\r\n    //   ),\r\n    // release_details: yup.string().required(\"Release Details is required\"),\r\n    website: yup\r\n      .string()\r\n      .required(\"Website is required\")\r\n      .matches(\r\n        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n        \"Enter correct url!\"\r\n      ),\r\n    // year_established: yup\r\n    //   .number()\r\n    //   .typeError(\"Year established must be a number\")\r\n    //   .required(\"Year established is required\")\r\n    //   .min(\r\n    //     new Date().getFullYear(),\r\n    //     \"Year must be current year or greater than current year\"\r\n    //   ),\r\n    password: yup\r\n      .string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n    password_confirmation: yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(\"password\"), null], \"Password confirm does not match\"),\r\n  })\r\n  .required();\r\n","import { motion } from \"framer-motion\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport global from \"../../assets/register/global.png\";\r\nimport K from \"../../assets/register/K.png\";\r\nimport ledger from \"../../assets/register/ledger.png\";\r\nimport maskGroup from \"../../assets/register/maskGroup.png\";\r\nimport mastercard from \"../../assets/register/mastercard.png\";\r\nimport metaMask from \"../../assets/register/metaMask.png\";\r\nimport payPal from \"../../assets/register/payPal.png\";\r\nimport spaces from \"../../assets/register/spaces.png\";\r\nimport Visa from \"../../assets/register/Visa.png\";\r\nimport walletConnect from \"../../assets/register/walletConnect.png\";\r\nimport { variants } from \"../../helpers/motion\";\r\nimport { registerPublisher, registerUser } from \"../../redux/slice/user.slice\";\r\nimport { FormRegis, ListInput, StepOne, WrapRegister } from \"./styled\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { InputData, schema } from \"./registerItul\";\r\nimport { Button } from \"antd\";\r\nimport { ConvertToFormData } from \"../../helpers/formData\";\r\nconst arrWallet = [\r\n  global,\r\n  K,\r\n  ledger,\r\n  maskGroup,\r\n  mastercard,\r\n  metaMask,\r\n  payPal,\r\n  spaces,\r\n  Visa,\r\n  walletConnect,\r\n];\r\n\r\nconst Register = () => {\r\n  const [step, setStep] = useState(true);\r\n  const fieldsValues = useRef();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const dispatch = useDispatch();\r\n  const { statusRegis } = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n  const onSubmit = (data) => {\r\n    let payload = ConvertToFormData(data);\r\n    dispatch(registerPublisher({ payload, goHome }));\r\n  };\r\n  const goHome = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <motion.main\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"hidden\"\r\n    >\r\n      <WrapRegister>\r\n        <h3 className=\"title_form\">CREATE ACOUNT</h3>\r\n        <div className=\"switch_register_type\">\r\n          <label htmlFor=\"switch_register_type\">Register for Publisher</label>\r\n        </div>\r\n        <FormRegis onSubmit={handleSubmit(onSubmit)} height={\"100%\"}>\r\n          <StepOne status={step}>\r\n            {InputData.map((item, index) => {\r\n              return (\r\n                <ListInput>\r\n                  <div className=\"field_item\">\r\n                    <input\r\n                      placeholder={item.field_1.placeholder}\r\n                      type={item.field_1.type || \"text\"}\r\n                      {...register(item.field_1.register)}\r\n                    />\r\n                    <p className=\"validateMessage\">\r\n                      {\" \"}\r\n                      {errors[item.field_1.register]?.message}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"field_item\">\r\n                    <input\r\n                      placeholder={item.field_2.placeholder}\r\n                      type={item.field_2.type || \"text\"}\r\n                      {...register(item.field_2.register)}\r\n                    />\r\n                    <p className=\"validateMessage\">\r\n                      {\" \"}\r\n                      {errors[item.field_2.register]?.message}\r\n                    </p>\r\n                  </div>\r\n                </ListInput>\r\n              );\r\n            })}\r\n\r\n            <div className=\"field_item\">\r\n              <input\r\n                placeholder=\"Address\"\r\n                type=\"text\"\r\n                className=\"input_form_last\"\r\n                {...register(\"address\")}\r\n              />\r\n              <p className=\"validateMessage\"> {errors?.address?.message}</p>\r\n            </div>\r\n            <Button htmlType=\"submit\" className=\"btn_form\">\r\n              Submit\r\n            </Button>\r\n          </StepOne>\r\n\r\n          {/* <StepTwo status={step}>\r\n            <ListApp>\r\n              <div className=\"step_two_header\">\r\n                <h3>Connect Wallet</h3>\r\n                <p>\r\n                  Seclect what network and wallet you want to connect bellow\r\n                </p>\r\n              </div>\r\n              <div className=\"apps\">\r\n                {arrWallet.map((app, index) => {\r\n                  return (\r\n                    <div className=\"bg_app\" key={index}>\r\n                      <img src={app} alt=\"app\" />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"list_app_footer\">\r\n                <span>What’s wallet?</span>\r\n                <p>\r\n                  Can’t find your wallet? <span>Suggest Defi Walllet</span>\r\n                </p>\r\n              </div>\r\n            </ListApp>\r\n            <FormMeta>\r\n              <div>\r\n                <h3>MetaMask</h3>\r\n                <p>\r\n                  MetaMask provides the simplest yet most secure way to connect\r\n                  to blockchain-based applications. You are always in control\r\n                  when interacting on the new decentralized web.\r\n                </p>\r\n              </div>\r\n              <div className=\"form_connect\">\r\n                <div className=\"input_top\">\r\n                  <input\r\n                    placeholder=\"Card Number\"\r\n                    type=\"text\"\r\n                    className=\"input_meta\"\r\n                    {...register(\"cardNumber\")}\r\n                  />\r\n                  <input\r\n                    placeholder=\"Expiration Date\"\r\n                    type=\"text\"\r\n                    className=\"input_meta\"\r\n                    {...register(\"expirationDate\", {\r\n                      required: true,\r\n                      minLength: 6,\r\n                    })}\r\n                  />\r\n                </div>\r\n                <input\r\n                  style={{ width: \"85%\" }}\r\n                  placeholder=\"Name\"\r\n                  type=\"text\"\r\n                  className=\"input_meta\"\r\n                  {...register(\"name\")}\r\n                />\r\n                <p className=\"or\">Or</p>\r\n                <button className=\"btn_QR\">Connect with QR code</button>\r\n              </div>\r\n              <button className=\"btn_connectWallet\">Connect Wallet</button>\r\n            </FormMeta>\r\n          </StepTwo> */}\r\n        </FormRegis>\r\n\r\n        {/* List btn step */}\r\n        {/* <ListBtnStep>\r\n          <div\r\n            className={`${step ? \"btn_step_active\" : \"btn_step\"}`}\r\n            onClick={() => {\r\n              setStep(true);\r\n            }}\r\n          >\r\n            <span>Step 1</span>\r\n            <span>Create Acount</span>\r\n          </div>\r\n          <div\r\n            className={`${!step ? \"btn_step_active\" : \"btn_step\"}`}\r\n            onClick={() => {\r\n              setStep(false);\r\n            }}\r\n          >\r\n            <span>Step 2</span>\r\n            <span>Connect Wallet</span>\r\n          </div>\r\n        </ListBtnStep> */}\r\n      </WrapRegister>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["WrapRegister","styled","FormRegis","props","height","StepOne","status","ListInput","InputData","field_1","placeholder","register","field_2","type","schema","yup","first_name","required","min","max","last_name","email","phone_number","business_name","contact_name","product_and_services","address","website","matches","password","password_confirmation","oneOf","useState","step","useRef","useForm","resolver","yupResolver","handleSubmit","errors","reset","getValues","formState","dispatch","useDispatch","navigate","useSelector","state","user","statusRegis","useNavigate","goHome","motion","variants","initial","animate","exit","className","htmlFor","onSubmit","data","payload","ConvertToFormData","registerPublisher","map","item","index","message","htmlType"],"sourceRoot":""}