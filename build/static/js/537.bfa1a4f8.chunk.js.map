{"version":3,"file":"static/js/537.bfa1a4f8.chunk.js","mappings":"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","sources":["pages/Register/registerItul.js","pages/Register/styled.js","pages/Register/components/FieldList/styled.js","pages/Register/components/FieldList/FieldList.jsx","pages/Register/Register.jsx"],"sourcesContent":["import * as yup from 'yup';\r\nexport const InputData = [\r\n  [\r\n    {\r\n      placeholder: 'Business Name *',\r\n      register: 'business_name',\r\n    },\r\n  ],\r\n\r\n  [\r\n    {\r\n      placeholder: 'First Name *',\r\n      register: 'first_name',\r\n    },\r\n    {\r\n      placeholder: 'Last Name *',\r\n      register: 'last_name',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      placeholder: 'Email*',\r\n      register: 'email',\r\n    },\r\n    {\r\n      placeholder: 'Phone Number *',\r\n      register: 'phone_number',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      placeholder: 'Password *',\r\n      register: 'password',\r\n      type: 'password',\r\n    },\r\n    {\r\n      placeholder: 'Confirm Password *',\r\n      register: 'password_confirmation',\r\n      type: 'password',\r\n    },\r\n  ],\r\n];\r\nexport const schema = yup\r\n  .object({\r\n    first_name: yup\r\n      .string()\r\n      .required('First name is required')\r\n      .min(2, 'Min length of First Name is 2')\r\n      .max(10, 'Max length of First Name is 10'),\r\n    last_name: yup\r\n      .string()\r\n      .required('Last name is required')\r\n      .min(2, 'Min length validate message')\r\n      .max(10),\r\n    email: yup.string().required('Email is required').email('Invalid email address'),\r\n    phone_number: yup\r\n      .string()\r\n      .required('Phone number is required')\r\n      .matches(/^!*([0-9]!*){10,}$/gi, 'Phone number must be at least 10 digits'),\r\n    business_name: yup.string().required('Business name is required'),\r\n\r\n    password: yup\r\n      .string()\r\n      .required('Password is required')\r\n      .min(8, 'Password must be at least 8 characters'),\r\n    password_confirmation: yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref('password'), null], 'Password confirm does not match'),\r\n  })\r\n  .required();\r\n","import styled from 'styled-components';\r\n\r\nconst WrapRegister = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #131313;\r\n  .title_form {\r\n    margin-top: 50px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .validateMessage {\r\n    color: red;\r\n    font-size: 2rem;\r\n  }\r\n  .switch_register_type {\r\n    margin-bottom: 2rem;\r\n    label {\r\n      user-select: none;\r\n      cursor: pointer;\r\n      color: white;\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormRegis = styled.form`\r\n  width: 100%;\r\n  height: ${(props) => props.height || '43%'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  margin-bottom: 10rem;\r\n`;\r\n\r\nconst StepOne = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 14px;\r\n  opacity: ${({ status }) => (status ? 1 : 0)};\r\n  z-index: ${({ status }) => (status ? 99 : -99)};\r\n  .btn_form {\r\n    background-color: #3b72fe;\r\n    padding: 14px 0;\r\n    width: 100%;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    height: 5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n  .input_form_last {\r\n    width: 100%;\r\n    background-color: #212121;\r\n    padding: 1.5rem;\r\n    color: #ffffff;\r\n  }\r\n  .field_item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 10rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ListInput = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  input {\r\n    background-color: #212121;\r\n    padding: 17px 50px;\r\n    width: 100%;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\n// Step two\r\n\r\nconst StepTwo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 50px;\r\n  position: absolute;\r\n  opacity: ${({ status }) => (!status ? 1 : 0)};\r\n  z-index: ${({ status }) => (!status ? 99 : -99)};\r\n`;\r\n\r\nconst ListApp = styled.div`\r\n  background-color: #1c212f;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  max-width: 536px;\r\n  height: auto;\r\n  padding: 20px;\r\n  gap: 20px;\r\n  .list_app_footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    margin-top: 2rem;\r\n    span {\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #3b72fe;\r\n    }\r\n    p {\r\n      font-size: 11px;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  .step_two_header {\r\n    h3 {\r\n      font-weight: 700;\r\n      font-size: 32px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n    }\r\n    p {\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n      letter-spacing: 0.0025em;\r\n      color: #9e9e9e;\r\n    }\r\n  }\r\n  .apps {\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    width: 85%;\r\n    margin: 0 auto;\r\n    .bg_app {\r\n      background-color: #ffffff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 90px;\r\n      height: 90px;\r\n    }\r\n    .list_app_footer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-end;\r\n      width: 100%;\r\n      margin-top: 2rem;\r\n      span {\r\n        font-weight: 400;\r\n        font-size: 11px;\r\n        letter-spacing: 0.0025em;\r\n        color: #3b72fe;\r\n      }\r\n      p {\r\n        font-size: 11px;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormMeta = styled.div`\r\n  background-color: #1c212f;\r\n  padding: 20px;\r\n  max-width: 536px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  gap: 45px;\r\n  h3 {\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  p {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n  }\r\n  .form_connect {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    .input_meta {\r\n      background: #212121;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      letter-spacing: 0.0025em;\r\n      color: #ffffff;\r\n      padding: 15px;\r\n      width: 100%;\r\n    }\r\n    .input_top {\r\n      display: flex;\r\n      width: 85%;\r\n      gap: 20px;\r\n    }\r\n    .btn_QR {\r\n      background: #212121;\r\n      font-weight: 400;\r\n      font-size: 11px;\r\n      line-height: 130%;\r\n      color: #ffffff;\r\n      padding: 12px 0;\r\n      width: 85%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .btn_connectWallet {\r\n    background: #3b72fe;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    width: 100%;\r\n    padding: 12px 0;\r\n  }\r\n  .or {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 11px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst ListBtnStep = styled.div`\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  letter-spacing: 0.0025em;\r\n  color: #9e9e9e;\r\n  display: flex;\r\n  .btn_step {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #1c212f;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #9e9e9e;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .btn_step_active {\r\n    width: 229px;\r\n    max-height: 57px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: center;\r\n\r\n    background-color: #181818;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    border: 2px solid #3b72fe;\r\n    cursor: pointer;\r\n    span:last-child {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\nexport { WrapRegister, FormRegis, StepOne, ListInput, ListBtnStep, StepTwo, FormMeta, ListApp };\r\n","import styled from 'styled-components';\r\n\r\nconst FieldListWrapper = styled.div`\r\n  width: 100%;\r\n  .row {\r\n    display: flex;\r\n    gap: 5rem;\r\n  }\r\n  .field_item {\r\n    margin-bottom: 2rem;\r\n    color: white;\r\n    input {\r\n      color: white;\r\n      width: 100%;\r\n      background: #1c212f;\r\n      padding: 2rem;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n`;\r\nexport default FieldListWrapper;\r\n","import React from 'react';\r\nimport { InputData } from '../../registerItul';\r\nimport { ListInput } from '../../styled';\r\nimport FieldListWrapper from './styled';\r\n\r\nconst FieldList = ({ register, errors }) => {\r\n  return (\r\n    <FieldListWrapper>\r\n      {InputData.map((row, index) => {\r\n        return (\r\n          <div className=\"row\" key={`row-${index}`}>\r\n            {row.map((item, index) => {\r\n              return (\r\n                <div className=\"field_item\" key={`field-${index}`}>\r\n                  <input\r\n                    placeholder={item.placeholder}\r\n                    type={item.type || 'text'}\r\n                    {...register(item.register)}\r\n                  />\r\n                  <p className=\"validateMessage\"> {errors[item.register]?.message}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </FieldListWrapper>\r\n  );\r\n};\r\n\r\nexport default FieldList;\r\n","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Button } from 'antd';\r\nimport { motion } from 'framer-motion';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport global from '../../assets/register/global.png';\r\nimport K from '../../assets/register/K.png';\r\nimport ledger from '../../assets/register/ledger.png';\r\nimport maskGroup from '../../assets/register/maskGroup.png';\r\nimport mastercard from '../../assets/register/mastercard.png';\r\nimport metaMask from '../../assets/register/metaMask.png';\r\nimport payPal from '../../assets/register/payPal.png';\r\nimport spaces from '../../assets/register/spaces.png';\r\nimport Visa from '../../assets/register/Visa.png';\r\nimport walletConnect from '../../assets/register/walletConnect.png';\r\nimport { ConvertToFormData } from '../../helpers/formData';\r\nimport { variants } from '../../helpers/motion';\r\nimport { registerPublisher } from '../../redux/slice/user.slice';\r\nimport FieldList from './components/FieldList/FieldList';\r\nimport { InputData, schema } from './registerItul';\r\nimport { FormRegis, ListInput, StepOne, WrapRegister } from './styled';\r\nconst arrWallet = [\r\n  global,\r\n  K,\r\n  ledger,\r\n  maskGroup,\r\n  mastercard,\r\n  metaMask,\r\n  payPal,\r\n  spaces,\r\n  Visa,\r\n  walletConnect,\r\n];\r\n\r\nconst Register = () => {\r\n  const [step, setStep] = useState(true);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const dispatch = useDispatch();\r\n  const { statusRegis, isLoading } = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n  const onSubmit = (data) => {\r\n    let payload = ConvertToFormData(data);\r\n    dispatch(registerPublisher({ payload, goHome }));\r\n  };\r\n  const goHome = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <motion.main variants={variants} initial=\"hidden\" animate=\"visible\" exit=\"hidden\">\r\n      <WrapRegister>\r\n        <h3 className=\"title_form\">CREATE ACOUNT</h3>\r\n        <div className=\"switch_register_type\">\r\n          <label htmlFor=\"switch_register_type\">Register for Publisher</label>\r\n        </div>\r\n        <FormRegis onSubmit={handleSubmit(onSubmit)} height={'100%'}>\r\n          <StepOne status={step}>\r\n            <FieldList register={register} errors={errors} />\r\n\r\n            <Button loading={isLoading} htmlType=\"submit\" className=\"btn_form\">\r\n              Submit\r\n            </Button>\r\n          </StepOne>\r\n        </FormRegis>\r\n      </WrapRegister>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["InputData","placeholder","register","type","schema","yup","first_name","required","min","max","last_name","email","phone_number","matches","business_name","password","password_confirmation","oneOf","WrapRegister","styled","FormRegis","props","height","StepOne","status","errors","map","row","index","className","item","message","useState","step","useForm","resolver","yupResolver","handleSubmit","reset","getValues","formState","dispatch","useDispatch","useSelector","state","user","isLoading","statusRegis","navigate","useNavigate","goHome","motion","variants","initial","animate","exit","htmlFor","onSubmit","data","payload","ConvertToFormData","registerPublisher","loading","htmlType"],"sourceRoot":""}