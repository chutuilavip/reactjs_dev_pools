{"version":3,"file":"static/js/576.a9d53d7b.chunk.js","mappings":"wXACaA,EAASC,EAAAA,GACZ,CACNC,MAAOD,EAAAA,KAAaE,WACpBC,MAAOH,EAAAA,KAAaE,WACpBE,QAASJ,EAAAA,KAAaE,WACtBG,iBAAkBL,EAAAA,KAAaE,WAC/BI,mBAAoBN,EAAAA,KAAaE,WACjCK,SAAUP,EAAAA,KAAaE,WACvBM,KAAMR,EAAAA,KAAaE,WACnBO,KAAMT,EAAAA,KAAaE,WAEnBQ,MAAOV,EAAAA,KAAaW,IAAI,EAAG,2CAC3BC,MAAOZ,EAAAA,KAEJa,KAAK,WAAY,yBAAyB,SAACC,GAAW,IAAD,EACpD,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,WAG3BF,EAAMC,UACDD,EAAMC,SAAS,GAAGE,KAAO,KAAO,KAAO,EAGjD,IAEAJ,KACC,aACA,4CACA,SAACC,GAAW,IAAD,EACT,IAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAC7B,OAAO,EAET,GAAIF,EAAMC,SAAU,CAAC,IAAD,YACDD,EAAMC,UADL,IAClB,2BAAiC,CAAC,IAAzBG,EAAwB,QAC/B,MAAkB,eAAdA,EAAKV,MAAuC,cAAdU,EAAKV,IAKxC,CAPiB,+BAQnB,CACD,OAAO,CACR,IAELW,QAASnB,EAAAA,KAAYa,KAAK,WAAY,yBAAyB,SAACC,GAAW,IAAD,EACxE,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,WAG3BF,EAAMC,UACDD,EAAMC,SAAS,GAAGE,KAAO,KAAO,KAAO,IAGjD,IAeDG,OAAQpB,EAAAA,KAELa,KACC,aACA,4CACA,SAACC,GAAW,IAAD,EACT,IAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAC7B,OAAO,EAET,GAAIF,EAAMC,SAAU,CAAC,IAAD,YACDD,EAAMC,UADL,IAClB,2BAAiC,CAAC,IAAzBG,EAAwB,QAC/B,MAAkB,eAAdA,EAAKV,MAAuC,cAAdU,EAAKV,IAKxC,CAPiB,+BAQnB,CACD,OAAO,CACR,IAEFK,KACC,aACA,0DACA,SAACC,GAAW,IAAD,MACT,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,YAGtB,OAALF,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAAS,OAGrB,OAALF,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAAS,GAI/B,MAGNd,WACUmB,EAAQ,CACnB,CACEC,YAAa,MACbrB,MAAO,OAET,CACEqB,YAAa,YACbrB,MAAO,aAET,CACEqB,YAAa,eACbrB,MAAO,iBAGEsB,EAAO,CAClB,CACED,YAAa,IACbE,GAAI,EACJvB,MAAO,OAET,CACEqB,YAAa,IACbE,GAAI,EACJvB,MAAO,S,WC/HEwB,E,SAAiBC,GAAAA,IAAH,ktC,sBCkBnBC,EAAYC,EAAAA,EAAAA,QACL,SAASC,IAAW,IAAD,IAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACf,GASIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbhB,QAAS,GACTP,MAAO,GACPQ,OAAQ,IAEVgB,UAAUC,EAAAA,EAAAA,GAAYtC,KAbtBuC,GAFF,EACEC,SADF,EAEED,WACAE,EAHF,EAGEA,QACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,MACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,SACaC,EARf,EAQEC,UAAaD,OAUf,GAAgEE,EAAAA,EAAAA,KAC9D,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IADMC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,kBAI1C,GADyB,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAmBC,YAAtB,iBAAG,EAAyBC,WAA5B,OAAG,EAA8BnC,QAClBoC,EAAAA,EAAAA,UAAS,KAAjD,eACA,GADA,WACkCA,EAAAA,EAAAA,WAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,IAEH,IAuDMC,EAAc,CAClB,CACEC,KAAM,WACNC,MAAO,WACPX,KAAMH,GAER,CACEa,KAAM,OACNC,MAAO,OACPX,KAAMjC,GAER,CACE2C,KAAM,OACNC,MAAO,OACPX,KAAM/B,GAGR,CACEyC,KAAM,qBACNC,MAAO,qBACPX,KAAMJ,IAQJgB,EAAe,SAACZ,GAAU,IAAD,EACvBa,EAAU,UAAGb,EAAKA,YAAR,aAAG,EAAWc,KAAI,SAACC,GACjC,MAAO,CACLvD,MAAOuD,EAAK/C,aAAe+C,EAAK7C,GAChCyC,MAAOI,EAAKC,UAAYD,EAAKpE,MAEhC,IASD,MARS,CACP,CACEa,MAAO,GACPmD,MAAM,cAAD,OAAgBX,EAAKW,OAC1BM,UAAU,IAJL,eAMJJ,GAGN,GAGDN,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACRW,EAAWC,OAAOC,KAAKpC,KACvBqC,EAAa,CAAC,EACpB,GAAItB,EAAmB,CAAC,IAAD,QACwB,OAAxB,OAAjBA,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,mBAAyBC,WAAzB,eAA8BqB,QAChClB,GAAa,GACqC,OAAxB,OAAjBL,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,mBAAyBC,WAAzB,eAA8BqB,SACvClB,GAAa,GAJM,gBAMPc,GANO,IAMrB,2BAAwB,CAAC,IAAhBK,EAAe,QACtB,GAIQ,WAANA,EAEAF,EAAWE,GAAK,QACX,GAAU,SAANA,EACT,cAAQxB,QAAR,IAAQA,GAAR,UAAQA,EAAmBC,YAA3B,iBAAQ,EAAyBC,WAAjC,aAAQ,EAA8B/C,MACpC,IAAK,IACHmE,EAAWE,GAAK,MAChB,MACF,IAAK,IACHF,EAAWE,GAAK,YAChB,MACF,QACEF,EAAWE,GAAK,oBAGf,GAAU,qBAANA,EAA0B,CAAC,IAAD,EACnCF,EAAWE,GAAX,OAAgBxB,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBC,YAAnC,aAAgB,EAAyBwB,KAAzB,WACjB,MAAM,GAAU,uBAAND,EAA4B,CAAC,IAAD,EACrCF,EAAWE,GAAX,OAAgBxB,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBC,YAAnC,aAAgB,EAAyBwB,KAAzB,OACjB,MAAM,GAAU,SAAND,EAAc,CAAC,IAAD,IACvBF,EAAWE,GAAX,OAAgBxB,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBC,YAAnC,iBAAgB,EAAyBC,WAAzC,aAAgB,EAA8BqB,MAC/C,KAAM,CAAC,IAAD,IACLD,EAAWE,IACQ,OAAjBxB,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,eAAyBC,IAAIsB,MAA7B,OAAmCxB,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAmBC,YAAtD,aAAmC,EAAyBwB,KAAKD,GACpE,CAMF,CAzCoB,+BA0CtB,CACDnC,EAAMiC,EACP,GAAE,CAACtB,IACJ,IAAM0B,GAAoB,CACxBC,SAAU,UACVC,OAAQ,wBACRC,UAAU,EACVC,OAAQ,mDACRC,SAAU,SAACN,GAAW,EACtBO,OANwB,SAMjBC,GAAK,GA0CRC,GAAsB,SAACzE,GAC3B8B,EAAS,OAAQ9B,GACjB0E,QAAQC,IAAI3E,GACE,MAAVA,EACF4C,GAAa,GACM,MAAV5C,GACT4C,GAAa,EAEhB,EACD8B,QAAQC,IAAInD,IAAaO,IACzBgB,EAAAA,EAAAA,YAAU,WACgC,IAAD,EAAnCY,OAAOC,KAAKxB,GAAWlC,OAAS,GAClCc,GACE4D,EAAAA,EAAAA,IAAsB,CAAEC,KAAI,OAAE3D,QAAF,IAAEA,OAAF,EAAEA,EAAQ2D,KAAMC,KAAI,UAAE1C,EAAU,UAAZ,aAAE,EAAc2C,OAGrE,GAAE,CAAC3C,IAUJ,OADAsC,QAAQC,IAAIpC,IAEV,UAAC5B,EAAD,YACE,eAAIqE,MAAO,CAAEC,UAAW,UAAxB,uBACA,UAAC,IAAD,CAAMC,SAAUvD,GArED,SAAC3B,GAAW,IAAD,IACxBmF,EAAUxB,OAAOyB,OAAO5D,IAAa,CAAEqB,OAAAA,IAC3C,GAAKF,QAA+B0C,IAAlBF,EAAQvF,MAO1B,GAAI,OAAC2C,QAAD,IAACA,GAAD,UAACA,EAAmBC,YAApB,iBAAC,EAAyBC,WAA1B,OAAC,EAA8B6C,aAAgBH,EAAQ7E,OAA3D,CAQA,IADA,IACA,MADaqD,OAAOC,KAAKuB,GACzB,eAAoB,CAAf,IACgB,EACW,EAErB,IAJFpB,EAAC,KACR,GAAU,UAANA,EACF,aAAIoB,EAAO,aAAX,OAAI,EAAkB/E,KACpB+E,EAAO,MAAP,UAAmBA,EAAO,MAAU/E,YAApC,aAAmB,EAAuBmF,mBAE1CJ,EAAQrF,MAAR,OAAgByC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBC,YAAnC,iBAAgB,EAAyBC,WAAzC,aAAgB,EAA8B3C,WAE3C,GAAU,YAANiE,EAAiB,CAAC,IAAD,EACI,EAEvB,IAFP,aAAIoB,EAAO,eAAX,OAAI,EAAoB/E,KACtB+E,EAAO,QAAP,UAAqBA,EAAO,QAAY/E,YAAxC,aAAqB,EAAyBmF,mBAE9CJ,EAAO,QAAP,OAAqB5C,QAArB,IAAqBA,GAArB,UAAqBA,EAAmBC,YAAxC,iBAAqB,EAAyBC,WAA9C,aAAqB,EAA8B+C,QAEtD,MAAM,GAAU,WAANzB,EAAgB,CAAC,IAAD,EACzB,UAAIoB,EAAO,cAAX,OAAI,EAAmBlF,WACrBkF,EAAO,QAAP,OAAwBA,EAAO,OAAWlF,UAE7C,CACF,CACDyE,QAAQC,IAAIQ,GACZ,IAAMM,GAAWC,EAAAA,EAAAA,GAAkBP,GACnCnE,GAAS2E,EAAAA,EAAAA,IAAQF,GAvBhB,MALC5D,EAAS,SAAU,CACjBnC,KAAM,WACNkG,QAAS,4BATX/D,EAAS,QAAS,CAChBnC,KAAM,WACNkG,QAAS,6CAkCd,IA8BG,UACGjC,OAAOC,KAAKxB,GAAWlC,OAAS,GAW/B,iBAAK2F,UAAU,SAAf,WACE,qCACA,SAAC,IAAD,CACEC,aAAa,GACbxB,SAAU,SAACE,GACT5C,EAAM,CAAC,GACPkB,EAAU0B,GACVxD,GACE4D,EAAAA,EAAAA,IAAsB,CAAEC,KAAI,OAAE3D,QAAF,IAAEA,OAAF,EAAEA,EAAQ2D,KAAMC,KAAMN,IAErD,EAEDuB,QAAO,CACL,CACE/F,MAAO,GACPmD,MAAO,0BACPM,UAAU,IAJP,eAMFrB,EAAUkB,KAAI,SAACC,EAAMyC,GACtB,MAAO,CACLhG,MAAOuD,EAAKwB,KACZ5B,MAAOI,EAAKC,SAEf,YAKP,SAACyC,EAAA,EAAD,IAEU,KAAXpD,IACC,8BACIP,GA2MA,SAAC2D,EAAA,EAAD,KA1MA,gCAhRQ,CAClB,CACE/C,KAAM,QACNC,MAAO,SACP+C,YAAa,eACbzC,UAAU,GAEZ,CACEP,KAAM,QACNC,MAAO,QACP+C,YAAa,mBAEf,CACEhD,KAAM,UACNC,MAAO,UACP+C,YAAa,iBAEf,CACEhD,KAAM,mBACNC,MAAO,cACP+C,YAAa,qBAGf,CACEhD,KAAM,gBACNC,MAAO,gBACP+C,YAAa,uBAEf,CACEhD,KAAM,cACNC,MAAO,cACP+C,YAAa,qBAEf,CACEhD,KAAM,iBACNC,MAAO,iBACP+C,YAAa,wBAEf,CACEhD,KAAM,iBACNC,MAAO,iBACP+C,YAAa,wBAEf,CACEhD,KAAM,cACNC,MAAO,cACP+C,YAAa,sBAmOU5C,KAAI,SAACC,EAAMyC,GACtB,OACE,SAAC,KAAD,CAEEtE,QAASA,EACTwB,KAAMK,EAAKL,KACXiD,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAOI,EAAKJ,MAAvB,WACE,SAAC,KAAD,gBACEM,UAAc,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAME,YAAY,GACxB2C,GAFN,IAGEF,YAAa3C,EAAK2C,YAClBxG,KAAM6D,EAAK7D,MAAQ,WAErB,cAAGmG,UAAU,gBAAb,mBACG9D,EAAOwB,EAAKL,aADf,aACG,EAAmB0C,YATlB,GAHHI,EAkBV,IACA/C,EAAYK,KAAI,SAACC,EAAMyC,GACtB,OACE,SAAC,KAAD,CAEEtE,QAASA,EACTwB,KAAMK,EAAKL,KACXiD,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAOI,EAAKJ,MAAvB,WACE,SAAC,KAAD,kBACMiD,GADN,IAEEN,aAAa,GACbxB,SACgB,SAAdf,EAAKL,KACDuB,GACA2B,EAAM9B,SAEZyB,QAAS3C,EAAaG,OAExB,cAAGsC,UAAU,gBAAb,mBACG9D,EAAOwB,EAAKL,aADf,aACG,EAAmB0C,YAblB,GAHHI,EAsBV,KACCrD,IACA,SAAC,KAAD,CACEjB,QAASA,EACTwB,KAAM,QACNiD,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAM,YAAjB,WACE,SAAC,KAAD,kBACMiD,GADN,IAEEF,YAAY,kBACZxG,KAAK,aAEP,cAAGmG,UAAU,gBAAb,gBACG9D,QADH,IACGA,GADH,UACGA,EAAQnC,aADX,aACG,EAAegG,YARd,KAcZ,SAAC,KAAD,CACElE,QAASA,EACTwB,KAAM,QACNiD,OAAQ,0BAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAM,aAAjB,WACE,UAACtC,GAAD,0BACMoD,IACAmC,GAFN,IAGEC,SAAU,EACVnC,SAAS,UACTC,OAAO,wBALT,WAOE,cAAG0B,UAAU,uBAAb,UACE,SAACS,EAAA,EAAD,OAEF,cAAGT,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,yCAIgB,OAAjBtD,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,mBAAyBC,WAAzB,eAA8B3C,SAC7B,iBAAK+F,UAAU,gBAAf,WACE,4CACA,SAAC,IAAD,CACEU,SAAS,EACTC,IAAG,UAAKC,EAAAA,GAAL,mBAAgBlE,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBC,YAAnC,iBAAgB,EAAyBC,WAAzC,aAAgB,EAA8B3C,OACjD4G,IAAI,gBACJb,UAAU,cAIhB,cAAGA,UAAU,gBAAb,mBAA8B9D,EAAOjC,aAArC,aAA8B,EAAc8F,YA9BxC,KAkCV,SAAC,KAAD,CACElE,QAASA,EACTwB,KAAK,SACLiD,OAAQ,0BAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAM,aAAjB,WACE,UAACtC,GAAD,kBACMuF,GADN,IAEEhC,UAAU,EACVF,SAAS,UACTC,OAAO,wBAJT,WAME,cAAG0B,UAAU,uBAAb,UACE,SAACS,EAAA,EAAD,OAEF,cAAGT,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,mDAKF,iBAAKA,UAAU,sBAAf,WACE,eACEb,MAAO,CACL2B,cAAe,YACfC,OAAQ,UAHZ,iCAMuB,QAEvB,gBAAKf,UAAU,cAAf,UACoB,OAAjBtD,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,mBAAyBC,WAAzB,eAA8B6C,cAC7BuB,KAAKC,MAAL,OACEvE,QADF,IACEA,GADF,UACEA,EAAmBC,YADrB,iBACE,EAAyBC,WAD3B,aACE,EAA8B6C,aAC9BhC,KAAI,SAACC,EAAMyC,GACX,OACE,iBAAKH,UAAU,QAAf,WACE,SAAC,IAAD,CAEEA,UAAU,aACVb,MAAO,CACL+B,UAAW,OACXC,aAAc,QAEhBT,SAAS,EACTC,IAAG,UAAKC,EAAAA,IAAL,OAAelD,GAClBmD,IAAI,cARCV,IAWP,SAAC,IAAD,CACEtG,KAAK,SACLuH,QAAS,kBArNZ,SAACC,GAAY,IAAD,IACzClG,GACEmG,EAAAA,EAAAA,IAAiB,CACfC,WAAYF,EACZ7H,MAAK,OAAEkD,QAAF,IAAEA,GAAF,UAAEA,EAAmBC,YAArB,iBAAE,EAAyBC,WAA3B,aAAE,EAA8BpD,QAG1C,CA8MgDgI,CAAuB9D,EAA7B,EAFX,iBAQL,UAIP,cAAGsC,UAAU,gBAAb,mBAA8B9D,EAAOzB,cAArC,aAA8B,EAAesF,YA3DzC,KA+DV,SAAC,KAAD,CACElE,QAASA,EACTwB,KAAM,UACNiD,OAAQ,0BAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWjD,MAAM,UAAjB,WACE,UAACtC,GAAD,kBAAauF,GAAb,IAAoBhC,UAAU,EAAOD,OAAO,OAA5C,WACE,cAAG0B,UAAU,uBAAb,UACE,SAACS,EAAA,EAAD,OAEF,cAAGT,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,sCAEF,cAAGA,UAAU,gBAAb,mBAA8B9D,EAAO1B,eAArC,aAA8B,EAAgBuF,WAC5B,OAAjBrD,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBC,YAAnB,mBAAyBC,WAAzB,eAA8B+C,YAC7B,cACER,MAAO,CACLsC,OAAQ,mBACRC,QAAS,OACTR,UAAW,OACXS,OAAQ,eALZ,UAQGC,EAAAA,EAAAA,IAAW,OAAClF,QAAD,IAACA,GAAD,UAACA,EAAmBC,YAApB,iBAAC,EAAyBC,WAA1B,aAAC,EAA8B+C,cArB3C,SAkCN,KAAX3C,IAAiB,SAAC,IAAD,CAAQ6E,SAAS,SAAjB,6BAIzB,C","sources":["components/TermsAndServices/Upload/EditApp/constant.js","components/TermsAndServices/Upload/EditApp/styled.js","components/TermsAndServices/Upload/EditApp/EditApp.jsx"],"sourcesContent":["import * as yup from \"yup\";\r\nexport const schema = yup\r\n  .object({\r\n    title: yup.string().required(),\r\n    appid: yup.string().required(),\r\n    summary: yup.string().required(),\r\n    full_description: yup.string().required(),\r\n    country_of_service: yup.string().required(),\r\n    category: yup.string().required(),\r\n    type: yup.string().required(),\r\n    free: yup.string().required(),\r\n    // locale: yup.string().required(),\r\n    price: yup.string().max(8, \"Price must be less than 8 digits number\"),\r\n    cover: yup\r\n      .mixed()\r\n      .test(\"fileSize\", \"The file is too large\", (value) => {\r\n        if (!value || value?.fileList?.length === 0) {\r\n          return true;\r\n        }\r\n        if (value.fileList) {\r\n          return value.fileList[0].size / 1024 / 1024 < 2;\r\n        }\r\n        return true;\r\n      })\r\n\r\n      .test(\r\n        \"image-type\",\r\n        \"The type must be image/jpeg or image/png\",\r\n        (value) => {\r\n          if (!value || value?.fileList?.length === 0) {\r\n            return true;\r\n          }\r\n          if (value.fileList) {\r\n            for (let file of value.fileList) {\r\n              if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n    apkfile: yup.mixed().test(\"fileSize\", \"The file is too large\", (value) => {\r\n      if (!value || value?.fileList?.length === 0) {\r\n        return true;\r\n      }\r\n      if (value.fileList) {\r\n        return value.fileList[0].size / 1024 / 1024 < 200;\r\n      }\r\n      return true;\r\n    }),\r\n    // .test(\"apk-type\", \"The type must be apk\", async (value) => {\r\n    //   if (!value || value?.fileList?.length === 0) {\r\n    //     return true;\r\n    //   }\r\n    //   if (value.fileList) {\r\n    //     for (let file of value.fileList) {\r\n    //       if (file.type === \".apk\") {\r\n    //         return true;\r\n    //       } else {\r\n    //         return false;\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }),\r\n    images: yup\r\n      .mixed()\r\n      .test(\r\n        \"image-type\",\r\n        \"The type must be image/jpeg or image/png\",\r\n        (value) => {\r\n          if (!value || value?.fileList?.length === 0) {\r\n            return true;\r\n          }\r\n          if (value.fileList) {\r\n            for (let file of value.fileList) {\r\n              if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      )\r\n      .test(\r\n        \"fileLength\",\r\n        \"You must upload at least 2 images and max is 10 images\",\r\n        (value) => {\r\n          if (!value || value?.fileList?.length === 0) {\r\n            return true;\r\n          }\r\n          if (value?.fileList?.length < 2) {\r\n            return false;\r\n          }\r\n          if (value?.fileList?.length > 10) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n  })\r\n  .required();\r\nexport const Types = [\r\n  {\r\n    locale_code: \"nft\",\r\n    title: \"NFT\",\r\n  },\r\n  {\r\n    locale_code: \"metaverse\",\r\n    title: \"Metaverse\",\r\n  },\r\n  {\r\n    locale_code: \"play-to-earn\",\r\n    title: \"Play To Earn\",\r\n  },\r\n];\r\nexport const Cost = [\r\n  {\r\n    locale_code: \"1\",\r\n    id: 1,\r\n    title: \"Pay\",\r\n  },\r\n  {\r\n    locale_code: \"0\",\r\n    id: 2,\r\n    title: \"Free\",\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const EditAppWrapper = styled.div`\r\n  padding: 1rem;\r\n  &&& {\r\n    .ant-form-item-label {\r\n      width: 20%;\r\n      text-align: left;\r\n    }\r\n\r\n    .ant-select {\r\n      width: 100%;\r\n    }\r\n  }\r\n  form {\r\n    width: 80%;\r\n    margin: auto;\r\n    .error_message {\r\n      color: red;\r\n    }\r\n    .locale {\r\n      margin-bottom: 2.4rem;\r\n      display: flex;\r\n      p {\r\n        width: 25%;\r\n      }\r\n    }\r\n  }\r\n  .step_group {\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .btn-group {\r\n      display: flex;\r\n    }\r\n    .btn {\r\n      width: 30rem;\r\n    }\r\n  }\r\n  .cover-wrapper {\r\n    margin-top: 2rem;\r\n    text-transform: uppercase;\r\n  }\r\n  .cover {\r\n    width: 50%;\r\n    border-radius: 5px;\r\n    margin-top: 1rem;\r\n  }\r\n  .screenshots-wrapper {\r\n    margin-top: 1rem;\r\n    .screenshots {\r\n      display: flex;\r\n      gap: 5rem;\r\n      flex-wrap: wrap;\r\n      flex-direction: column;\r\n      .image {\r\n        width: 100%;\r\n        display: flex;\r\n        padding: 1rem;\r\n        border-radius: 5px;\r\n        box-shadow: rgb(99 99 99 / 20%) 0px 2px 8px 0px;\r\n      }\r\n      .screenshot {\r\n        width: 20%;\r\n        aspect-ratio: 2/1;\r\n\r\n        img {\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { InboxOutlined } from \"@ant-design/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Form, Image, Input, Select, Skeleton, Upload } from \"antd\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteScreenshot,\r\n  editApp,\r\n  getCategoriesAndLanguage,\r\n  getDetailAppWithLange,\r\n} from \"../../../../redux/slice/detailApp.slice\";\r\n\r\nimport Loading from \"../../../../layout/components/Loading/Loading\";\r\nimport { getFileName, URL_API } from \"../../../../utils\";\r\nimport { Cost, schema, Types } from \"./constant\";\r\nimport { EditAppWrapper } from \"./styled\";\r\nimport { ConvertToFormData } from \"../../../../helpers/formData\";\r\n\r\nconst { Dragger } = Upload;\r\nexport default function EditApp() {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const {\r\n    register,\r\n    getValues,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      apkfile: [],\r\n      cover: [],\r\n      images: [],\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { languages, categories, isLoading, detailAppWithLang } = useSelector(\r\n    (state) => state.detailApp\r\n  );\r\n  const currentImagesLength = detailAppWithLang?.data?.app?.images;\r\n  const [defaultCover, setDefaultCover] = useState([]);\r\n  const [isAppFree, setIsAppFree] = useState(true);\r\n  const [locale, setLocale] = useState(\"\");\r\n  useEffect(() => {\r\n    dispatch(getCategoriesAndLanguage());\r\n  }, []);\r\n\r\n  const InputFields = [\r\n    {\r\n      name: \"appid\",\r\n      label: \"App ID\",\r\n      placeholder: \"Enter App ID\",\r\n      disabled: true,\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Title\",\r\n      placeholder: \"Enter App Title\",\r\n    },\r\n    {\r\n      name: \"summary\",\r\n      label: \"Summary\",\r\n      placeholder: \"Enter Summary\",\r\n    },\r\n    {\r\n      name: \"full_description\",\r\n      label: \"Description\",\r\n      placeholder: \"Enter Description\",\r\n    },\r\n\r\n    {\r\n      name: \"recent_change\",\r\n      label: \"Recent Change\",\r\n      placeholder: \"Enter Recent Change\",\r\n    },\r\n    {\r\n      name: \"app_version\",\r\n      label: \"App Version\",\r\n      placeholder: \"Enter App Version\",\r\n    },\r\n    {\r\n      name: \"privacy_policy\",\r\n      label: \"Privacy Policy\",\r\n      placeholder: \"Enter Privacy Policy\",\r\n    },\r\n    {\r\n      name: \"term_of_policy\",\r\n      label: \"Term Of Policy\",\r\n      placeholder: \"Enter Term Of Policy\",\r\n    },\r\n    {\r\n      name: \"app_support\",\r\n      label: \"App Support\",\r\n      placeholder: \"Enter App Support\",\r\n    },\r\n    // {\r\n    //   name: \"price\",\r\n    //   label: \"Price\",\r\n    //   placeholder: \"Enter Price\",\r\n    //   type: \"number\",\r\n    // },\r\n  ];\r\n  const SelectField = [\r\n    {\r\n      name: \"category\",\r\n      label: \"Category\",\r\n      data: categories,\r\n    },\r\n    {\r\n      name: \"type\",\r\n      label: \"Type\",\r\n      data: Types,\r\n    },\r\n    {\r\n      name: \"free\",\r\n      label: \"Cost\",\r\n      data: Cost,\r\n    },\r\n\r\n    {\r\n      name: \"country_of_service\",\r\n      label: \"Country Of Service\",\r\n      data: languages,\r\n    },\r\n    // {\r\n    //   name: \"locale\",\r\n    //   label: \"Locale\",\r\n    //   data: languages,\r\n    // },\r\n  ];\r\n  const renderOption = (data) => {\r\n    const mainOption = data.data?.map((item) => {\r\n      return {\r\n        value: item.locale_code || item.id,\r\n        label: item.language || item.title,\r\n      };\r\n    });\r\n    const res = [\r\n      {\r\n        value: \"\",\r\n        label: `Select App ${data.label}`,\r\n        disabled: true,\r\n      },\r\n      ...mainOption,\r\n    ];\r\n    return res;\r\n  };\r\n\r\n  // Initial value of form\r\n  useEffect(() => {\r\n    const formKeys = Object.keys(getValues());\r\n    const resetValue = {};\r\n    if (detailAppWithLang) {\r\n      if (detailAppWithLang?.data?.app?.is_pay === \"1\") {\r\n        setIsAppFree(false);\r\n      } else if (detailAppWithLang?.data?.app?.is_pay === \"0\") {\r\n        setIsAppFree(true);\r\n      }\r\n      for (let v of formKeys) {\r\n        if (\r\n          // v === \"cover\" ||\r\n          // v === \"images\" ||\r\n          // v === \"apkfile\" ||\r\n          v === \"locale\"\r\n        ) {\r\n          resetValue[v] = \"\";\r\n        } else if (v === \"type\") {\r\n          switch (detailAppWithLang?.data?.app?.type) {\r\n            case \"1\":\r\n              resetValue[v] = \"nft\";\r\n              break;\r\n            case \"2\":\r\n              resetValue[v] = \"metaverse\";\r\n              break;\r\n            default:\r\n              resetValue[v] = \"play-to-earn\";\r\n              break;\r\n          }\r\n        } else if (v === \"full_description\") {\r\n          resetValue[v] = detailAppWithLang?.data?.info[\"description\"];\r\n        } else if (v === \"country_of_service\") {\r\n          resetValue[v] = detailAppWithLang?.data?.info[\"country\"];\r\n        } else if (v === \"free\") {\r\n          resetValue[v] = detailAppWithLang?.data?.app?.is_pay;\r\n        } else {\r\n          resetValue[v] =\r\n            detailAppWithLang?.data?.app[v] || detailAppWithLang?.data?.info[v];\r\n        }\r\n        // if (v === \"apkfile\") {\r\n        //   resetValue[v] = detailAppWithLang?.data?.app[\"file_apl\"];\r\n        // } else {\r\n        // resetValue[v] = detailAppWithLang?.data?.app[v];\r\n        // }\r\n      }\r\n    }\r\n    reset(resetValue);\r\n  }, [detailAppWithLang]);\r\n  const propsUploadAvatar = {\r\n    listType: \"picture\",\r\n    accept: \"image/png, image/jpeg\",\r\n    multiple: false,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange: (info) => {},\r\n    onDrop(e) {},\r\n  };\r\n  const submitForm = (value) => {\r\n    let payload = Object.assign(getValues(), { locale });\r\n    if (!isAppFree && payload.price === undefined) {\r\n      setError(\"price\", {\r\n        type: \"required\",\r\n        message: \"Price is required when you set app is Pay\",\r\n      });\r\n      return;\r\n    }\r\n    if (!detailAppWithLang?.data?.app?.screenshots && !payload.images) {\r\n      setError(\"images\", {\r\n        type: \"required\",\r\n        message: \"Images is required\",\r\n      });\r\n      return;\r\n    }\r\n    const keys = Object.keys(payload);\r\n    for (let v of keys) {\r\n      if (v === \"cover\") {\r\n        if (payload[\"cover\"]?.file) {\r\n          payload[\"cover\"] = payload[\"cover\"].file?.originFileObj;\r\n        } else {\r\n          payload.cover = detailAppWithLang?.data?.app?.cover;\r\n        }\r\n      } else if (v === \"apkfile\") {\r\n        if (payload[\"apkfile\"]?.file) {\r\n          payload[\"apkfile\"] = payload[\"apkfile\"].file?.originFileObj;\r\n        } else {\r\n          payload[\"apkfile\"] = detailAppWithLang?.data?.app?.file_apk;\r\n        }\r\n      } else if (v === \"images\") {\r\n        if (payload[\"images\"]?.fileList) {\r\n          payload[\"images\"] = [...payload[\"images\"].fileList];\r\n        }\r\n      }\r\n    }\r\n    console.log(payload);\r\n    const formData = ConvertToFormData(payload);\r\n    dispatch(editApp(formData));\r\n  };\r\n  const handleChangeAppCost = (value) => {\r\n    setValue(\"free\", value);\r\n    console.log(value);\r\n    if (value === \"1\") {\r\n      setIsAppFree(false);\r\n    } else if (value === \"0\") {\r\n      setIsAppFree(true);\r\n    }\r\n  };\r\n  console.log(getValues(), errors);\r\n  useEffect(() => {\r\n    if (Object.keys(languages).length > 0) {\r\n      dispatch(\r\n        getDetailAppWithLange({ slug: params?.slug, lang: languages[0]?.code })\r\n      );\r\n    }\r\n  }, [languages]);\r\n  const handleDeleteScreenshot = (imgUrl) => {\r\n    dispatch(\r\n      deleteScreenshot({\r\n        name_image: imgUrl,\r\n        appid: detailAppWithLang?.data?.app?.appid,\r\n      })\r\n    );\r\n  };\r\n  console.log(detailAppWithLang);\r\n  return (\r\n    <EditAppWrapper>\r\n      <h1 style={{ textAlign: \"center\" }}>EDIT APP</h1>\r\n      <Form onFinish={handleSubmit(submitForm)}>\r\n        {Object.keys(languages).length > 0 ? (\r\n          // <Controller\r\n          //   control={control}\r\n          //   name=\"locale\"\r\n          //   render={({ field }) => (\r\n          //     <Form.Item label=\"Locale\">\r\n\r\n          //       <p className=\"error_message\">{errors?.locale?.message}</p>\r\n          //     </Form.Item>\r\n          //   )}\r\n          // />\r\n          <div className=\"locale\">\r\n            <p>Locale :</p>\r\n            <Select\r\n              defaultValue=\"\"\r\n              onChange={(e) => {\r\n                reset({});\r\n                setLocale(e);\r\n                dispatch(\r\n                  getDetailAppWithLange({ slug: params?.slug, lang: e })\r\n                );\r\n              }}\r\n              // defaultValue={languages[0]?.code}\r\n              options={[\r\n                {\r\n                  value: \"\",\r\n                  label: \"Choo App locale to edit\",\r\n                  disabled: true,\r\n                },\r\n                ...languages.map((item, index) => {\r\n                  return {\r\n                    value: item.code,\r\n                    label: item.language,\r\n                  };\r\n                }),\r\n              ]}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n        {locale !== \"\" && (\r\n          <>\r\n            {!isLoading ? (\r\n              <>\r\n                {InputFields.map((item, index) => {\r\n                  return (\r\n                    <Controller\r\n                      key={index}\r\n                      control={control}\r\n                      name={item.name}\r\n                      render={({ field }) => (\r\n                        <Form.Item label={item.label}>\r\n                          <Input\r\n                            disabled={item?.disabled || false}\r\n                            {...field}\r\n                            placeholder={item.placeholder}\r\n                            type={item.type || \"text\"}\r\n                          />\r\n                          <p className=\"error_message\">\r\n                            {errors[item.name]?.message}\r\n                          </p>\r\n                        </Form.Item>\r\n                      )}\r\n                    />\r\n                  );\r\n                })}\r\n                {SelectField.map((item, index) => {\r\n                  return (\r\n                    <Controller\r\n                      key={index}\r\n                      control={control}\r\n                      name={item.name}\r\n                      render={({ field }) => (\r\n                        <Form.Item label={item.label}>\r\n                          <Select\r\n                            {...field}\r\n                            defaultValue=\"\"\r\n                            onChange={\r\n                              item.name === \"free\"\r\n                                ? handleChangeAppCost\r\n                                : field.onChange\r\n                            }\r\n                            options={renderOption(item)}\r\n                          />\r\n                          <p className=\"error_message\">\r\n                            {errors[item.name]?.message}\r\n                          </p>\r\n                        </Form.Item>\r\n                      )}\r\n                    />\r\n                  );\r\n                })}\r\n                {!isAppFree && (\r\n                  <Controller\r\n                    control={control}\r\n                    name={\"price\"}\r\n                    render={({ field }) => (\r\n                      <Form.Item label=\"App Price\">\r\n                        <Input\r\n                          {...field}\r\n                          placeholder=\"Enter App price\"\r\n                          type=\"number\"\r\n                        />\r\n                        <p className=\"error_message\">\r\n                          {errors?.price?.message}\r\n                        </p>\r\n                      </Form.Item>\r\n                    )}\r\n                  />\r\n                )}\r\n                <Controller\r\n                  control={control}\r\n                  name={\"cover\"}\r\n                  render={({ field }) => (\r\n                    <Form.Item label=\"App avatar\">\r\n                      <Dragger\r\n                        {...propsUploadAvatar}\r\n                        {...field}\r\n                        maxCount={1}\r\n                        listType=\"picture\"\r\n                        accept=\"image/png, image/jpeg\"\r\n                      >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                          Click or drag file to this area to upload\r\n                        </p>\r\n                        <p className=\"ant-upload-hint\">\r\n                          Upload your new avatar\r\n                        </p>\r\n                      </Dragger>\r\n                      {detailAppWithLang?.data?.app?.cover && (\r\n                        <div className=\"cover-wrapper\">\r\n                          <p>Current Cover :</p>\r\n                          <Image\r\n                            preview={false}\r\n                            src={`${URL_API}/${detailAppWithLang?.data?.app?.cover}`}\r\n                            alt=\"Current Cover\"\r\n                            className=\"cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <p className=\"error_message\">{errors.cover?.message}</p>\r\n                    </Form.Item>\r\n                  )}\r\n                />\r\n                <Controller\r\n                  control={control}\r\n                  name=\"images\"\r\n                  render={({ field }) => (\r\n                    <Form.Item label=\"App Images\">\r\n                      <Dragger\r\n                        {...field}\r\n                        multiple={true}\r\n                        listType=\"picture\"\r\n                        accept=\"image/png, image/jpeg\"\r\n                      >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                          Click or drag file to this area to upload\r\n                        </p>\r\n                        <p className=\"ant-upload-hint\">\r\n                          Upload your new app's screenshot\r\n                        </p>\r\n                      </Dragger>\r\n\r\n                      <div className=\"screenshots-wrapper\">\r\n                        <p\r\n                          style={{\r\n                            textTransform: \"uppercase\",\r\n                            margin: \"3rem 0\",\r\n                          }}\r\n                        >\r\n                          Current Screenshots:{\" \"}\r\n                        </p>\r\n                        <div className=\"screenshots\">\r\n                          {detailAppWithLang?.data?.app?.screenshots &&\r\n                            JSON.parse(\r\n                              detailAppWithLang?.data?.app?.screenshots\r\n                            ).map((item, index) => {\r\n                              return (\r\n                                <div className=\"image\">\r\n                                  <Image\r\n                                    key={index}\r\n                                    className=\"screenshot\"\r\n                                    style={{\r\n                                      marginTop: \"1rem\",\r\n                                      borderRadius: \"1rem\",\r\n                                    }}\r\n                                    preview={false}\r\n                                    src={`${URL_API}${item}`}\r\n                                    alt=\"screenshot\"\r\n                                  />\r\n\r\n                                  <Button\r\n                                    type=\"danger\"\r\n                                    onClick={() => handleDeleteScreenshot(item)}\r\n                                  >\r\n                                    x\r\n                                  </Button>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <p className=\"error_message\">{errors.images?.message}</p>\r\n                    </Form.Item>\r\n                  )}\r\n                />\r\n                <Controller\r\n                  control={control}\r\n                  name={\"apkfile\"}\r\n                  render={({ field }) => (\r\n                    <Form.Item label=\"App Apk\">\r\n                      <Dragger {...field} multiple={false} accept=\".apk\">\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                          <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                          Click or drag file to this area to upload\r\n                        </p>\r\n                        <p className=\"ant-upload-hint\">Upload your new apk</p>\r\n                      </Dragger>\r\n                      <p className=\"error_message\">{errors.apkfile?.message}</p>\r\n                      {detailAppWithLang?.data?.app?.file_apk && (\r\n                        <p\r\n                          style={{\r\n                            border: \"1px dashed black\",\r\n                            padding: \"1rem\",\r\n                            marginTop: \"2rem\",\r\n                            cursor: \"not-allowed\",\r\n                          }}\r\n                        >\r\n                          {getFileName(detailAppWithLang?.data?.app?.file_apk)}\r\n                        </p>\r\n                      )}\r\n                    </Form.Item>\r\n                  )}\r\n                />\r\n              </>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {locale !== \"\" && <Button htmlType=\"submit\">Update App</Button>}\r\n      </Form>\r\n    </EditAppWrapper>\r\n  );\r\n}\r\n"],"names":["schema","yup","title","required","appid","summary","full_description","country_of_service","category","type","free","price","max","cover","test","value","fileList","length","size","file","apkfile","images","Types","locale_code","Cost","id","EditAppWrapper","styled","Dragger","Upload","EditApp","dispatch","useDispatch","params","useParams","useForm","defaultValues","resolver","yupResolver","getValues","register","control","handleSubmit","reset","setError","setValue","errors","formState","useSelector","state","detailApp","languages","categories","isLoading","detailAppWithLang","data","app","useState","isAppFree","setIsAppFree","locale","setLocale","useEffect","getCategoriesAndLanguage","SelectField","name","label","renderOption","mainOption","map","item","language","disabled","formKeys","Object","keys","resetValue","is_pay","v","info","propsUploadAvatar","listType","accept","multiple","action","onChange","onDrop","e","handleChangeAppCost","console","log","getDetailAppWithLange","slug","lang","code","style","textAlign","onFinish","payload","assign","undefined","screenshots","originFileObj","file_apk","formData","ConvertToFormData","editApp","message","className","defaultValue","options","index","Loading","placeholder","render","field","maxCount","InboxOutlined","preview","src","URL_API","alt","textTransform","margin","JSON","parse","marginTop","borderRadius","onClick","imgUrl","deleteScreenshot","name_image","handleDeleteScreenshot","border","padding","cursor","getFileName","htmlType"],"sourceRoot":""}