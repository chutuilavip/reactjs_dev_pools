{"version":3,"file":"static/js/728.ac3b4d92.chunk.js","mappings":"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","sources":["helpers/motion.js","components/Account/InfoUser/styled.js","components/Account/InfoUser/InfoAvatarUser.jsx","pages/Account/styled.js","components/Account/InfoUser/fields.js","components/Account/InfoUser/InfoDetailUser.jsx","helpers/formData.js","components/Account/MyWallet/styled.js","components/Account/MyWallet/MyWallet.jsx","components/Account/Activities/styled.js","components/Account/Activities/MyActivities.jsx","components/Account/Activities/DownloadApp.jsx","components/Account/Activities/TodayActivities.jsx","pages/Account/Account.jsx"],"sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nexport const variants = {\r\n  hidden: {\r\n    x: \"20%\",\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.2,\r\n    },\r\n  },\r\n  visible: {\r\n    x: \"0\",\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nexport const notify = (toastId, message) => {\r\n  if (!toast.isActive(toastId.current)) {\r\n    toastId.current = toast(message);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nexport const MainAvatar = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const HeaderInfo = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const AvatarUser = styled.div`\r\n  width: 150px;\r\n  margin-right: 18px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  border: 5px solid;\r\n  border-image-slice: 1;\r\n  border-image-source: linear-gradient(to right bottom, #2f2e86, #ffffff);\r\n  &&& {\r\n    .ant-avatar {\r\n      width: 100%;\r\n      aspect-ratio: 1/1;\r\n      margin: 0;\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-size: 6rem;\r\n      color: rebeccapurple;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextInfoUser = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  .title {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    color: white;\r\n  }\r\n  .id {\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    color: #e0e0e0;\r\n  }\r\n`;\r\n\r\nexport const Onchange = styled.div`\r\n  align-items: center;\r\n  margin-top: 21px;\r\n  display: flex;\r\n  color: white;\r\n  .button_onchange {\r\n    padding: 3px 15px;\r\n  }\r\n`;\r\nexport const InfoDetail = styled.div`\r\n  &&& {\r\n    .ant-form-item {\r\n      margin: 0;\r\n    }\r\n  }\r\n  margin-top: 74px;\r\n  .title {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .button_logOut {\r\n    background-color: #141414;\r\n    color: white;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 23px;\r\n    padding: 5px 14px;\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport const ShowInfo = styled.div`\r\n  margin-top: 40px;\r\n  .grid_container {\r\n    display: grid;\r\n    /* grid-template-columns: auto auto auto; */\r\n    grid-template: repeat(3, 1fr) / repeat(3, 1fr);\r\n    gap: 47px;\r\n  }\r\n  .grid_item {\r\n  }\r\n  .one {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .two {\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  Button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n  .userNameField {\r\n    display: flex;\r\n    gap: 1rem;\r\n    width: 100%;\r\n    .userNameInput {\r\n      width: 50%;\r\n    }\r\n  }\r\n  .change_password_field {\r\n    display: flex;\r\n    gap: 1rem;\r\n  }\r\n  .validateMessage {\r\n    font-size: 0.9rem;\r\n    color: orange;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HeaderInfo,\r\n  MainAvatar,\r\n  AvatarUser,\r\n  TextInfoUser,\r\n  Onchange,\r\n} from \"./styled\";\r\nimport { Button, Modal, Input, Avatar, Upload, message } from \"antd\";\r\nimport Pen from \"../../../assets/Account/buttonchange.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getEditAvatar, getAccount } from \"../../../redux/slice/account.slice\";\r\nimport Loading from \"../../../layout/components/Loading/Loading\";\r\nimport { URL_API } from \"../../../constants/constants.js\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { getDefaultAvatarName } from \"../../../helpers\";\r\nimport { assignToFormData } from \"../../../helpers/formData\";\r\n\r\nconst InfoUser = ({ res }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n  const [file, setFile] = useState({});\r\n  let formData = new FormData();\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n\r\n    return isJpgOrPng;\r\n  };\r\n  const handleCancel = () => {\r\n    if (disabledButton) {\r\n      return;\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleChangeAvt = () => {\r\n    if (disabledButton) {\r\n      return;\r\n    }\r\n    if (Object.keys(file).length === 0) {\r\n      return;\r\n    }\r\n    formData.append(\"avatar\", file);\r\n    dispatch(getEditAvatar(formData));\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleChange = (info) => {\r\n    if (info?.file.status === \"uploading\") {\r\n      setDisabledButton(true);\r\n    } else {\r\n      setDisabledButton(false);\r\n      setFile(info.file.originFileObj);\r\n    }\r\n  };\r\n  const { data } = res;\r\n  return (\r\n    <MainAvatar>\r\n      {data ? (\r\n        <HeaderInfo>\r\n          <AvatarUser>\r\n            {!!data.dev?.avatar ? (\r\n              <img src={`${URL_API}/${data.dev?.avatar}`} alt=\"avatar user\" />\r\n            ) : (\r\n              <Avatar\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                }}\r\n              >\r\n                {getDefaultAvatarName(data.dev.first_name, data.dev.last_name)}\r\n              </Avatar>\r\n            )}\r\n          </AvatarUser>\r\n\r\n          <TextInfoUser>\r\n            <div className=\"title\">\r\n              {data.dev.first_name} {data.dev.last_name}\r\n            </div>\r\n            <div className=\"id\"># {data.dev.id}</div>\r\n            <Onchange>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"button_onchange\"\r\n                onClick={() => showModal(true)}\r\n              >\r\n                {t(\"account.change_avatar\")}\r\n              </Button>\r\n              <img src={Pen} alt=\"pen \" />\r\n            </Onchange>\r\n          </TextInfoUser>\r\n        </HeaderInfo>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Edit avatar account\"\r\n        centered\r\n        open={isModalOpen}\r\n        onOk={handleChangeAvt}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture\"\r\n          // defaultFileList={[...fileList]}\r\n          maxCount={1}\r\n          beforeUpload={beforeUpload}\r\n          accept=\"image/png, image/jpeg\"\r\n          onChange={handleChange}\r\n        >\r\n          <Button icon={<UploadOutlined />}>Upload</Button>\r\n        </Upload>\r\n      </Modal>\r\n    </MainAvatar>\r\n  );\r\n};\r\n\r\nexport default InfoUser;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  padding: 100px 80px;\r\n  background-color: #141414;\r\n`;\r\n","const fields = [\r\n  \"email\",\r\n  \"phone_number\",\r\n  \"country\",\r\n  \"business_name\",\r\n  \"contact_name\",\r\n  \"website\",\r\n  \"address\",\r\n  \"release_details\",\r\n  \"product_and_services\",\r\n  \"products_url\",\r\n  \"year_established\",\r\n  \"application_catalog\",\r\n];\r\nexport default fields;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport Pen from \"../../../assets/Account/buttonchange.png\";\r\nimport { assignToFormData } from \"../../../helpers/formData\";\r\nimport Loading from \"../../../layout/components/Loading/Loading\";\r\nimport { editAccountInfo } from \"../../../redux/slice/account.slice\";\r\nimport { goToTop } from \"../../../utils\";\r\nimport fields from \"./fields\";\r\nimport { InfoDetail, ShowInfo } from \"./styled\";\r\nconst schema = yup\r\n  .object({\r\n    first_name: yup.string().required().min(2).max(10),\r\n    last_name: yup\r\n      .string()\r\n      .required()\r\n      .min(2, \"Min length validate message\")\r\n      .max(10),\r\n    email: yup.string().required().email(),\r\n    phone_number: yup.string().required(),\r\n    // country: yup.string().required(),\r\n    business_name: yup.string().required(),\r\n    application_catalog: yup.string().required(),\r\n    contact_name: yup.string().required(),\r\n    product_and_services: yup.string().required(),\r\n    products_url: yup.string().required(),\r\n    release_details: yup.string().required(),\r\n    website: yup.string().required(),\r\n    year_established: yup.string().required(),\r\n    password: yup.string(),\r\n    password_confirmation: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"Password confirm does not match\"),\r\n  })\r\n  .required();\r\n\r\nconst InfoDetailUser = ({ res }) => {\r\n  console.log(res);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const [editFields, setEditFields] = useState([]);\r\n  const { data } = res;\r\n  const { first_name, last_name, email, phone_number, country } = data.dev;\r\n  const {\r\n    business_name,\r\n    application_catalog,\r\n    contact_name,\r\n    product_and_services,\r\n    products_url,\r\n    release_details,\r\n    website,\r\n    address,\r\n    year_established,\r\n  } = data.business_info;\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    getValues,\r\n    setError,\r\n    setFocus,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      phone_number,\r\n      country,\r\n      current_password: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      business_name,\r\n      contact_name,\r\n      website,\r\n      address,\r\n      release_details,\r\n      product_and_services,\r\n      products_url,\r\n      year_established,\r\n      application_catalog,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const handleEdit = (type) => {\r\n    const index = editFields.findIndex((el) => el === type);\r\n    if (index === -1) {\r\n      setEditFields((editFields) => [...editFields, type]);\r\n    } else {\r\n      const cloneEditFields = [...editFields];\r\n      cloneEditFields.splice(index, 1);\r\n      setEditFields(cloneEditFields);\r\n    }\r\n  };\r\n  const onSubmit = (data) => {\r\n    if (data.current_password && data.password.length < 8) {\r\n      setError(\"password\", {\r\n        type: \"password length\",\r\n        message: \"New password must be at least 8 characters\",\r\n      });\r\n      setFocus(\"password\", { shouldSelect: true });\r\n      return;\r\n    }\r\n    goToTop();\r\n    const formData = assignToFormData(data);\r\n    dispatch(editAccountInfo(formData));\r\n  };\r\n  console.log(errors);\r\n  return (\r\n    <InfoDetail>\r\n      <div className=\"title\">{t(\"account.my_account\")}</div>\r\n      <Button className=\"button_logOut\">{t(\"account.log_out\")}</Button>\r\n      {data ? (\r\n        <ShowInfo>\r\n          <Form onFinish={handleSubmit(onSubmit)} className=\"grid_container\">\r\n            <div className=\"grid_item one\">{t(\"account.user_name\")}</div>\r\n            <div className=\"grid_item two\">\r\n              {editFields.includes(\"userName\") ? (\r\n                <div className=\"userNameField\">\r\n                  <Controller\r\n                    name=\"first_name\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                    render={({ field }) => (\r\n                      <div className=\"userNameInput\">\r\n                        <Form.Item>\r\n                          <Input {...field} onBlur={field.onBlur} />\r\n                        </Form.Item>\r\n                        <p className=\"validateMessage\">\r\n                          {\" \"}\r\n                          {errors.first_name?.message}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                  <Controller\r\n                    name=\"last_name\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                    render={({ field }) => (\r\n                      <div className=\"userNameInput\">\r\n                        <Form.Item>\r\n                          <Input {...field} onBlur={field.onBlur} />\r\n                        </Form.Item>\r\n                        <p className=\"validateMessage\">\r\n                          {\" \"}\r\n                          {errors.last_name?.message}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                `${getValues(\"first_name\")} ${getValues(\"last_name\")}`\r\n              )}\r\n            </div>\r\n            <div className=\"grid_item\">\r\n              <Button type=\"primary\" onClick={() => handleEdit(\"userName\")}>\r\n                {t(\"account.edit\")} <img src={Pen} alt=\"pen \" />\r\n              </Button>\r\n            </div>\r\n            {/* -------------------------------------- */}\r\n\r\n            <div className=\"grid_item one\">{t(\"account.password\")}</div>\r\n            <div className=\"grid_item two\">\r\n              {editFields.includes(\"password\") ? (\r\n                <div className=\"change_password_field\">\r\n                  <Controller\r\n                    name=\"current_password\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                    render={({ field }) => (\r\n                      <div>\r\n                        <Form.Item>\r\n                          <Input\r\n                            placeholder=\"current password\"\r\n                            {...field}\r\n                            onBlur={field.onBlur}\r\n                            type=\"password\"\r\n                          />\r\n                        </Form.Item>\r\n                        <p className=\"validateMessage\">\r\n                          {\" \"}\r\n                          {errors.current_password?.message}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                  <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                    render={({ field }) => (\r\n                      <div>\r\n                        <Form.Item>\r\n                          <Input\r\n                            placeholder=\"new password\"\r\n                            {...field}\r\n                            onBlur={field.onBlur}\r\n                            type=\"password\"\r\n                          />\r\n                        </Form.Item>\r\n                        <p className=\"validateMessage\">\r\n                          {\" \"}\r\n                          {errors.password?.message}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                  <Controller\r\n                    name=\"password_confirmation\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                    render={({ field }) => (\r\n                      <div>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          <Input\r\n                            placeholder=\"confirm new password\"\r\n                            {...field}\r\n                            onBlur={field.onBlur}\r\n                            type=\"password\"\r\n                          />\r\n                        </Form.Item>\r\n                        <p className=\"validateMessage\">\r\n                          {\" \"}\r\n                          {errors.password_confirmation?.message}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"***********\"\r\n              )}\r\n            </div>\r\n            <div className=\"grid_item\">\r\n              <Button type=\"primary\" onClick={() => handleEdit(\"password\")}>\r\n                {t(\"account.edit\")} <img src={Pen} alt=\"pen \" />\r\n              </Button>\r\n            </div>\r\n            {/* -------------------------------------- */}\r\n\r\n            {fields.map((fieldName, index) => {\r\n              return (\r\n                <Fragment key={index}>\r\n                  <div className=\"grid_item one\">\r\n                    {t(`account.${fieldName}`)}\r\n                  </div>\r\n                  <div className=\"grid_item two\">\r\n                    {editFields.includes(fieldName) ? (\r\n                      <Controller\r\n                        name={fieldName}\r\n                        control={control}\r\n                        rules={{ required: true }}\r\n                        render={({ field }) => (\r\n                          <div>\r\n                            <Form.Item>\r\n                              <Input {...field} onBlur={field.onBlur} />\r\n                            </Form.Item>\r\n                            <p className=\"validateMessage\">\r\n                              {errors[fieldName]?.message}\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      `${\r\n                        getValues(fieldName) === \"null\" || undefined\r\n                          ? \"This field is empty\"\r\n                          : getValues(fieldName)\r\n                      }`\r\n                    )}\r\n                  </div>\r\n                  <div className=\"grid_item\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={() => handleEdit(fieldName)}\r\n                    >\r\n                      {t(\"account.edit\")} <img src={Pen} alt=\"pen \" />\r\n                    </Button>\r\n                  </div>\r\n                </Fragment>\r\n              );\r\n            })}\r\n\r\n            <Button\r\n              style={{ width: \"20%\", textAlign: \"center\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"button\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </ShowInfo>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </InfoDetail>\r\n  );\r\n};\r\n\r\nexport default InfoDetailUser;\r\n","export const assignToFormData = (data) => {\r\n  const formData = new FormData();\r\n  const keys = Object.keys(data);\r\n  for (let v of keys) {\r\n    if (data[v] === \"null\" || data[v] === undefined || data[v] === null) {\r\n      continue;\r\n    }\r\n    formData.append(v, data[v]);\r\n  }\r\n  return formData;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const MyWalletMain = styled.div`\r\n  width: 100%;\r\n  margin-top: 127px;\r\n  .title_wallet {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n  .your_wallet_text {\r\n    margin-top: 30px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n  }\r\n\r\n  .button_connect {\r\n    margin-top: 23px;\r\n    display: flex;\r\n    gap: 20px;\r\n    Button {\r\n      padding: 0;\r\n      height: 90px;\r\n      width: 330px;\r\n      display: flex;\r\n      align-items: center;\r\n      ._img {\r\n        min-width: 90px;\r\n        min-height: 90px;\r\n        display: flex;\r\n        justify-content: center;\r\n        border-right: 1px solid #141414;\r\n        align-items: center;\r\n        img {\r\n          width: 60px;\r\n          height: 60px;\r\n        }\r\n      }\r\n      ._money {\r\n        padding: 0 20px;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        p {\r\n          font-style: normal;\r\n          font-weight: 700;\r\n          font-size: 20px;\r\n          letter-spacing: 0.0025em;\r\n          color: #ffffff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .connect_more {\r\n    margin-top: 17px;\r\n    width: 190px;\r\n    height: 40px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    letter-spacing: 0.0025em;\r\n    color: #ffffff;\r\n    background-color: #141414;\r\n  }\r\n`;\r\n","import { Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { MyWalletMain } from \"./styled\";\r\nimport Wallet1 from \"../../../assets/Account/wallet1.png\";\r\nimport Metamask from \"../../../assets/Account/metamask.png\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MyWallet = ({ res }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <MyWalletMain>\r\n      <div className=\"title_wallet\">{t(\"account.my_wallet\")}</div>\r\n      <div className=\"your_wallet_text\">{t(\"account.your_wallet_address\")}</div>\r\n      <div className=\"button_connect\">\r\n        {/* <Button type=\"primary\">\r\n          <div className=\"_img\">\r\n            <img src={Wallet1} alt=\"wallet1\" />\r\n          </div>\r\n          <div className=\"_money\">\r\n            <p>Adam kun</p>\r\n            <p>$1000</p>\r\n          </div>\r\n        </Button> */}\r\n        {res.data.dev_info?.map((item, index) => {\r\n          return (\r\n            <Button style={{ width: \"auto\" }} key={index} type=\"primary\">\r\n              <div className=\"_img\">\r\n                <img src={Metamask} alt=\"wallet1\" />\r\n              </div>\r\n              <div className=\"_money\">\r\n                <p>{item.creator_address.slice(0, 7)}...</p>\r\n                <p style={{ margin: \"0 30px\" }}>\r\n                  Total USD: {item.total_usd ? item.total_usd : \"$0\"}\r\n                </p>\r\n                <p>Total Pools: {item.total_pools ? item.total_pools : \"$0\"}</p>\r\n              </div>\r\n            </Button>\r\n          );\r\n        })}\r\n      </div>\r\n      <Button className=\"connect_more\">\r\n        {t(\"account.connect_more_wallet\")}\r\n      </Button>\r\n    </MyWalletMain>\r\n  );\r\n};\r\n\r\nexport default MyWallet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MyActivities = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 30px;\r\n  /* overflow-y: scroll; */\r\n`;\r\n\r\nexport const TitleActivities = styled.div`\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  margin-top: 150px;\r\n  letter-spacing: 0.0025em;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const ItemsActivities = styled.div`\r\n  width: 100%;\r\n  height: 240px;\r\n  margin-bottom: 26px;\r\n  .bg_light {\r\n    background-color: white;\r\n  }\r\n  .bg_dark {\r\n    background: linear-gradient(180deg, #2e2e2e 0%, #3d3d3d 100%);\r\n  }\r\n  ._items {\r\n    width: 100%;\r\n    display: flex;\r\n    ._img_activities {\r\n      width: 472px;\r\n      height: 238px;\r\n    }\r\n    .detail_activities {\r\n      width: 100%;\r\n      display: grid;\r\n      grid-template-columns: auto auto auto;\r\n      padding: 34px 120px;\r\n      .grid_item {\r\n        ._tit_acti {\r\n          font-style: normal;\r\n          font-weight: 700;\r\n          font-size: 26px;\r\n        }\r\n        .title_dark {\r\n          color: white;\r\n        }\r\n        ._show_dark {\r\n          color: rgba(255, 255, 255, 0.7);\r\n        }\r\n        ._show_acti {\r\n          font-style: normal;\r\n          font-weight: 400;\r\n          font-size: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { MyActivities, TitleActivities, ItemsActivities } from \"./styled\";\r\nimport Data from \"../../../assets/Account/imgbg.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MyActivity = () => {\r\n   const { t } = useTranslation();\r\n\r\n   return (\r\n      <>\r\n         <TitleActivities>{t(\"account.my_activities\")}</TitleActivities>\r\n         <MyActivities>\r\n            <ItemsActivities>\r\n               <div className=\"_items bg_light\">\r\n                  <img src={Data} className=\"_img_activities\" alt=\"game\" />\r\n                  <div className=\"detail_activities\">\r\n                     <div className=\"grid_item\">\r\n                        <div className=\"_tit_acti\">\r\n                           {t(\"account.name_of_product\")}\r\n                        </div>\r\n                        <div className=\"_show_acti\">Elden Ring</div>\r\n                     </div>\r\n                     <div className=\"grid_item\">\r\n                        <div className=\"_tit_acti\"> {t(\"account.type\")} </div>\r\n                        <div className=\"_show_acti\">Game</div>\r\n                     </div>\r\n                     <div className=\"grid_item\">\r\n                        <div className=\"_tit_acti\">{t(\"account.status\")} </div>\r\n                        <div className=\"_show_acti\">Success</div>\r\n                     </div>\r\n                     <div className=\"grid_item\">\r\n                        <div className=\"_tit_acti\">{t(\"account.date\")} </div>\r\n                        <div className=\"_show_acti\">26/04/2022</div>\r\n                     </div>\r\n                     <div className=\"grid_item\">\r\n                        <div className=\"_tit_acti\">{t(\"account.value\")} </div>\r\n                        <div className=\"_show_acti\">60.00 ETHER </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </ItemsActivities>\r\n         </MyActivities>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default MyActivity;\r\n","import React from \"react\";\r\nimport { MyActivities, TitleActivities, ItemsActivities } from \"./styled\";\r\nimport Data from \"../../../assets/Account/imgbg.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { URL_API } from \"../../../constants/constants\";\r\n\r\nconst DownloadApp = ({ res }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <TitleActivities>{t(\"account.downloaded_app\")}</TitleActivities>\r\n      <MyActivities>\r\n        {res.data.downloaded.map((item, index) => {\r\n          return (\r\n            <ItemsActivities key={index}>\r\n              <div className=\"_items bg_dark\">\r\n                <img\r\n                  src={`${URL_API}/${item.cover}`}\r\n                  className=\"_img_activities\"\r\n                  alt=\"game\"\r\n                />\r\n                <div className=\"detail_activities\">\r\n                  <div className=\"grid_item\">\r\n                    <div className=\"_tit_acti title_dark\">\r\n                      {t(\"account.name_of_product\")}\r\n                    </div>\r\n                    <div className=\"_show_acti _show_dark\">{item.title}</div>\r\n                  </div>\r\n                  <div className=\"grid_item\">\r\n                    <div className=\"_tit_acti title_dark\">\r\n                      {\" \"}\r\n                      {t(\"account.type\")}{\" \"}\r\n                    </div>\r\n                    <div className=\"_show_acti _show_dark\">\r\n                      {item.type ? item.type : \"Game\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grid_item\">\r\n                    <div className=\"_tit_acti title_dark\">\r\n                      {t(\"account.status\")}{\" \"}\r\n                    </div>\r\n                    <div className=\"_show_acti _show_dark\">Success</div>\r\n                  </div>\r\n                  <div className=\"grid_item\">\r\n                    <div className=\"_tit_acti title_dark\">\r\n                      {t(\"account.date\")}{\" \"}\r\n                    </div>\r\n                    <div className=\"_show_acti _show_dark\">\r\n                      {item.updated_at.slice(0, 10)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"grid_item\">\r\n                    <div className=\"_tit_acti title_dark\">\r\n                      {t(\"account.value\")}{\" \"}\r\n                    </div>\r\n                    <div className=\"_show_acti _show_dark\">\r\n                      {Number(item.price) === 0 ? \"Free\" : item.price}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ItemsActivities>\r\n          );\r\n        })}\r\n      </MyActivities>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadApp;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { TitleActivities } from \"./styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TodayActivities = ({ res }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"account.time\")}`,\r\n      dataIndex: \"time\",\r\n      key: \"time\",\r\n    },\r\n    {\r\n      title: `${t(\"account.action\")}`,\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n    },\r\n    {\r\n      title: `${t(\"account.type\")}`,\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: `${t(\"account.view\")}`,\r\n      dataIndex: \"view\",\r\n      key: \"view\",\r\n    },\r\n  ];\r\n  const dataSource = [\r\n    {\r\n      key: \"1\",\r\n      time: \"Mike\",\r\n      action: 32,\r\n      type: \"10 Downing Street\",\r\n      view: \"view\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      time: \"John\",\r\n      action: 42,\r\n      type: \"10 Downing Street\",\r\n      view: \"view\",\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <TitleActivities>{t(\"account.today_activities\")}</TitleActivities>\r\n      <Table dataSource={dataSource} columns={columns} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodayActivities;\r\n","import React, { useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { variants } from \"../../helpers/motion\";\r\nimport InfoAvatarUser from \"../../components/Account/InfoUser/InfoAvatarUser\";\r\nimport { Main } from \"./styled\";\r\nimport InfoDetailUser from \"../../components/Account/InfoUser/InfoDetailUser\";\r\nimport MyWallet from \"../../components/Account/MyWallet/MyWallet\";\r\nimport MyActivities from \"../../components/Account/Activities/MyActivities\";\r\nimport DownloadApp from \"../../components/Account/Activities/DownloadApp\";\r\nimport TodayActivities from \"../../components/Account/Activities/TodayActivities\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAccount } from \"../../redux/slice/account.slice\";\r\nimport Loading from \"../../layout/components/Loading/Loading\";\r\n\r\nconst Account = () => {\r\n  const { infoAccount, isLoading } = useSelector((state) => state.account);\r\n  const dispatch = useDispatch();\r\n  console.log(infoAccount.res);\r\n  useEffect(() => {\r\n    dispatch(getAccount());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.main\r\n        variants={variants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"hidden\"\r\n      >\r\n        <Main>\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : (\r\n            <>\r\n              <InfoAvatarUser res={infoAccount?.res} />\r\n              <InfoDetailUser res={infoAccount?.res} />\r\n              <MyWallet res={infoAccount?.res} />\r\n              <MyActivities res={infoAccount?.res} />\r\n              <DownloadApp res={infoAccount?.res} />\r\n              <TodayActivities res={infoAccount?.res} />\r\n            </>\r\n          )}\r\n        </Main>\r\n      </motion.main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"names":["variants","hidden","x","opacity","transition","duration","visible","notify","toastId","message","toast","current","MainAvatar","styled","HeaderInfo","AvatarUser","TextInfoUser","Onchange","InfoDetail","ShowInfo","res","useState","isModalOpen","setIsModalOpen","disabledButton","setDisabledButton","file","setFile","formData","FormData","t","useTranslation","dispatch","useDispatch","data","dev","avatar","src","URL_API","alt","style","verticalAlign","getDefaultAvatarName","first_name","last_name","className","id","type","onClick","Pen","Loading","title","centered","open","onOk","Object","keys","length","append","getEditAvatar","onCancel","action","listType","maxCount","beforeUpload","isJpgOrPng","accept","onChange","info","status","originFileObj","icon","UploadOutlined","Main","schema","yup","required","min","max","email","phone_number","business_name","application_catalog","contact_name","product_and_services","products_url","release_details","website","year_established","password","password_confirmation","oneOf","console","log","editFields","setEditFields","country","business_info","address","useForm","defaultValues","current_password","resolver","yupResolver","handleSubmit","control","getValues","setError","setFocus","errors","formState","handleEdit","index","findIndex","el","cloneEditFields","splice","onFinish","shouldSelect","goToTop","v","undefined","assignToFormData","editAccountInfo","includes","name","rules","render","field","onBlur","placeholder","fields","fieldName","Fragment","width","textAlign","htmlType","MyWalletMain","dev_info","map","item","Metamask","creator_address","slice","margin","total_usd","total_pools","MyActivities","TitleActivities","ItemsActivities","Data","downloaded","cover","updated_at","Number","price","columns","dataIndex","key","dataSource","time","view","useSelector","state","account","infoAccount","isLoading","useEffect","getAccount","motion","initial","animate","exit","InfoAvatarUser"],"sourceRoot":""}