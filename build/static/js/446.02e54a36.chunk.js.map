{"version":3,"file":"static/js/446.02e54a36.chunk.js","mappings":"oUAkDA,EA5CoB,SAAC,GAA2D,IAAzDA,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAClDC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,MAAM,qCACNC,OAAO,MACPC,WAAW,KACXC,UAAW,kBACTL,GACEM,EAAAA,EAAAA,IAAU,CACRV,MAAAA,EACAW,SAAU,WACRP,GAASQ,EAAAA,EAAAA,IAAcV,GACxB,IANI,EAJb,UAeE,SAAC,IAAD,CAAQW,KAAK,UAAUC,QAAM,EAACC,UAAU,SAAxC,uBAKF,SAAC,IAAD,CAAQF,KAAK,UAAUE,UAAU,SAAjC,UACE,SAAC,KAAD,CAASC,GAAE,mCAA8BjB,GAAzC,qBAEF,SAAC,IAAD,CACEc,KAAK,UACLE,UAAU,SACVE,MAAO,CAAEC,gBAAiB,SAAUC,OAAQ,OAAQC,MAAO,SAC3DC,QAAS,kBAAMlB,GAAe,EAArB,EAJX,UAME,SAAC,KAAD,CACEc,MAAO,CAAEC,gBAAiB,SAAUC,OAAQ,OAAQC,MAAO,SAC3DJ,GAAE,uBAAkBf,GAFtB,yBASP,E,uDC9CYqB,EAAsBC,EAAAA,GAAAA,IAAH,6H,WCS1BC,EAAU,CACd,CACElB,MAAO,OACPmB,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GACP,OAAO,SAAC,IAAD,CAAOb,UAAU,cAAcc,IAAG,UAAKC,EAAAA,GAAL,YAAgBF,GAAUG,SAAS,GAC7E,GAEH,CACEzB,MAAO,OACPmB,UAAW,OACXC,IAAK,SAEP,CACEpB,MAAO,UACPmB,UAAW,UACXC,IAAK,UACLM,MAAO,MACPC,OAAQ,QAEV,CACE3B,MAAO,QACPmB,UAAW,QACXC,IAAK,SAEP,CACEpB,MAAO,SACPmB,UAAW,SACXC,IAAK,UAEP,CACEpB,MAAO,SACPmB,UAAW,SACXC,IAAK,UAGP,CACEpB,MAAO,YACPmB,UAAW,aACXC,IAAK,cAEP,CACEpB,MAAO,UACPmB,UAAW,UACXC,IAAK,WAEP,CACEpB,MAAO,OACPmB,UAAW,WACXC,IAAK,YAEP,CACEpB,MAAO,SACPmB,UAAW,UACXC,IAAK,UACLC,OAAQ,YAA0B,EAAvB3B,MAAuB,EAAhBkC,UAChB,OACE,SAAC,IAAD,CAAQrB,KAAK,UAAUE,UAAU,SAAjC,kBAIH,IA+GL,EA5GqB,SAAC,GAAwB,IAAtBoB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEtBC,GAASC,EAAAA,EAAAA,MACTlC,GAAWC,EAAAA,EAAAA,MACXkC,GAAYC,EAAAA,EAAAA,UAClB,GAA6CC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IAAjDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,oBACrB,GAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,MANkB,GAOlBC,KAAM,EACNC,OAAQ,KAHV,eAAO/C,EAAP,KAAqBgD,EAArB,MAKAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdpD,MAAOqC,EAAOrC,MACd+C,MAAO7C,EAAa6C,MACpBC,KAAM9C,EAAa8C,KACnBC,OAAQ/C,EAAa+C,QAEvB7C,GAASiD,EAAAA,EAAAA,IAAkBD,GAC5B,GAAE,CAAClD,IAkDJ,OACE,SAACoB,EAAD,WACE,UAAC,IAAD,CAAOhB,MAAM,cAAcgD,MAAM,EAAMnB,KAAMA,EAAMC,SAAUA,EAA7D,UACkC,IAA/BmB,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAaY,SACnB,SAAC,IAAD,CACEC,YAAY,sBACZC,YAAU,EACVC,KAAK,QACLC,SAnBW,SAACC,GAChBtB,EAAUuB,SACZC,aAAaxB,EAAUuB,SAEzBvB,EAAUuB,QAAUE,YAAW,WAC7Bd,GAAgB,SAACe,GACf,OAAO,kBAAKA,GAAZ,IAAkBhB,OAAQY,EAAEK,OAAOC,OACpC,GACF,GAAE,IACJ,EAWSlD,MAAO,CACLmD,aAAc,OACdpC,MAAO,MACPqC,WAAY,OACZC,aAAc,UAKpB,gBAAKvD,UAAU,mBAAf,SACkC,IAA/BwC,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAaY,SACnB,SAAC,IAAD,CACEI,SArCe,SAACZ,EAAMuB,GAChCrB,GAAgB,SAACe,GACf,OAAO,kBAAKA,GAAZ,IAAkBlB,MAAOwB,EAAUvB,KAAMA,GAC1C,GACF,EAkCWQ,OAAkB,OAAXZ,QAAW,IAAXA,OAAA,EAAAA,EAAaY,QA1FZ,GA2FRgB,iBAAe,EACfC,iBAAe,OAIrB,SAAC,IAAD,CACEjD,QAASA,EACTkD,WA/Ee,WACrB,IACiB,EADbC,EAAO,GACP/B,IACF,UAAAA,EAAYgC,YAAZ,SAAkBC,SAAQ,SAACC,GAAU,IAAD,EAC9BC,EAAS,GACb,OAAQxB,OAAOuB,EAAKC,SAClB,IAAK,IACHA,EAAS,cACT,MACF,IAAK,IACHA,EAAS,SACT,MACF,QACEA,EAAS,UAGbJ,EAAKK,KAAK,CACRC,QAASH,EAAKG,QACdC,KAAMJ,EAAKxE,MACXA,MAAOwE,EAAKxE,MACZ6E,OAAQL,EAAKK,OACbC,KAAI,UAAEN,EAAKM,YAAP,aAAE,EAAWxD,OACjByD,WAAYP,EAAKO,WACjBN,OAAQA,EACRO,QAASR,EAAKQ,QACdC,KAAMT,EAAKU,SACXC,QAAS,CAAEzF,MAAO8E,EAAKY,QAE1B,KAEH,OAAOf,CACR,CAgDmBgB,GACZC,YAAY,EACZC,QAAShD,QAKlB,E,+BCpLYiD,EAAqBvE,EAAAA,GAAAA,IAAH,udC6B/B,EA3BoB,SAAC,GAAc,IAAZqD,EAAW,EAAXA,KACrB,OACE,UAACkB,EAAD,YACE,2BACE,iBAAM/E,UAAU,GAAhB,wBACA,kBAAMA,UAAU,SAAhB,cAA2BgF,IAAOnB,EAAKS,YAAYW,OAAO,kCAE5D,0BACE,iBAAMjF,UAAU,QAAhB,yBAA2C,KAC3C,kBAAMA,UAAU,SAAhB,UAA0B6D,EAAKqB,YAA/B,WAEF,0BACE,iBAAMlF,UAAU,QAAhB,0BACA,kBAAMA,UAAU,SAAhB,cAA2B6D,EAAKsB,YAAhC,WAEF,0BACE,iBAAMnF,UAAU,QAAhB,qBACA,kBAAMA,UAAU,SAAhB,cAA2B6D,EAAKuB,OAAhC,WAEF,0BACE,iBAAMpF,UAAU,QAAhB,yBACA,kBAAMA,UAAU,SAAhB,cAA2BgF,IAAOnB,EAAKwB,YAAYJ,OAAO,mCAIjE,ECfD,EAXwB,SAAC,GAAuB,IAArBK,EAAoB,EAApBA,cACzB,OACE,8BACGA,GACCA,EAAcC,KAAI,SAAC1B,EAAM2B,GACvB,OAAO,SAAC,EAAD,CAAsC3B,KAAMA,GAA5C,kBAA6B2B,GACrC,KAGR,ECgGD,EAjG8B,SAAC,GAAwB,IAAtBpE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/BC,GAASC,EAAAA,EAAAA,MACTlC,GAAWC,EAAAA,EAAAA,MACXkC,GAAYC,EAAAA,EAAAA,UAClB,GAA0CM,EAAAA,EAAAA,UAAS,CAAE0D,QAAS,GAAIC,OAAQ,KAA1E,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0C7D,EAAAA,EAAAA,UAAS,MAAnD,eAAO8D,EAAP,KAAsBC,EAAtB,KACA,GACEpE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IADN0D,EAAR,EAAQA,cAAeS,EAAvB,EAAuBA,oBAAqBC,EAA5C,EAA4CA,iBAAkBC,EAA9D,EAA8DA,UAAWC,EAAzE,EAAyEA,UAEnEC,EAAmB,SAACT,GACxBrG,GACE+G,EAAAA,EAAAA,IAAoB,CAClBnH,MAAOqC,EAAO+E,GACdZ,QAASE,EAAcF,QACvBC,OAAQA,GAAUC,EAAcD,SAGrC,GAoBDtD,EAAAA,EAAAA,YAAU,WAlBR/C,GAASiH,EAAAA,EAAAA,OACNC,SACAC,MAAK,SAACC,GACLN,EAAiBM,EAAIC,SAAS,GAAGC,MACjCb,EAAiBW,EAAIC,SAAS,GAAGC,KAClC,GAeJ,GAAE,KACHvE,EAAAA,EAAAA,YAAU,WACH8D,GACHC,GAEH,GAAE,CAACR,IAcJ,OADAiB,QAAQC,IAAIhB,IAEV,0BACE,SAAC,IAAD,CAAOtG,MAAM,wBAAwBgD,MAAM,EAAMnB,KAAMA,EAAMC,SAAUA,EAAvE,SACqB,OAAlBwE,IACC,iCACE,0CACA,SAAC,IAAD,CACE3F,MAAO,CACLe,MAAO,OACP6F,OAAQ,OACRzD,aAAc,QAEhB0D,aAAclB,EACdhD,SArCe,SAACC,GAC1B8C,GAAiB,SAAC1C,GAAD,eAAC,UAAeA,GAAhB,IAAsBwC,OAAQ5C,GAA9B,GAClB,EAoCWkE,QAzBRf,GACAA,EAAUV,KAAI,SAACxB,EAAMyB,GACnB,MAAO,CACL7E,IAAK6E,EACLpC,MAAOW,EAAK4C,KACZM,MAAOlD,EAAK2C,SAEf,OAoBK,SAAC,IAAD,CACEhE,YAAY,qCACZC,YAAU,EACVC,KAAK,QACLC,SApDS,SAACC,GAChBtB,EAAUuB,SACZC,aAAaxB,EAAUuB,SAEzBvB,EAAUuB,QAAUE,YAAW,WAC7B2C,GAAiB,SAAC1C,GAAD,eAAC,UAAeA,GAAhB,IAAsBuC,QAAS3C,EAAEK,OAAOC,OAAxC,GAClB,GAAE,IACJ,EA8CWlD,MAAO,CACLmD,aAAc,OACdpC,MAAO,MACPqC,WAAY,OACZC,aAAc,SAGjBwC,GAA4C,YAArBC,GACtB,SAACkB,EAAA,EAAD,KAEA,SAAC,EAAD,CAAiB5B,cAAeA,UAO7C,ECxGY6B,EAAwB3G,EAAAA,GAAAA,IAAH,6yCCSlC,SAAS4G,EAAeC,EAAGC,GACzB,IACMjI,GAAWC,EAAAA,EAAAA,MACXkC,EAAY+F,EAAAA,SAElB,GAA8C7F,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IAAlD4F,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,qBACrB,GAAwC1F,EAAAA,EAAAA,UAAS,CAC/CC,MANkB,GAOlBC,KAAM,EACN1C,MAAO,KAHT,eAAOJ,EAAP,KAAqBgD,EAArB,KAKA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAO2F,EAAP,KAAoBtI,EAApB,KACA,GAAoD2C,EAAAA,EAAAA,WAAS,GAA7D,eAAO4F,EAAP,KAA2BC,EAA3B,MACAxF,EAAAA,EAAAA,YAAU,WACR/C,GAASQ,EAAAA,EAAAA,IAAcV,GACxB,GAAE,CAACA,KAEJiD,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLyF,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU7I,GACrD,CACF,GAAE,IACH,IAAM8I,EAAoB,SAACC,GACzB,OAAQA,GACN,IAAK,SACH,MAAO,gBACT,IAAK,UACH,MAAO,iBACT,QACE,MAAO,kBAEZ,EACKzH,EAAU,CACd,CACElB,MAAO,QACPmB,UAAW,QACXC,IAAK,QACLC,OAAQ,SAACE,GACP,OAAO,SAAC,IAAD,CAAQA,IAAKA,EAAG,UAAMC,EAAAA,GAAN,YAAiBD,GAAjB,sCACxB,GAEH,CACEvB,MAAO,YACPmB,UAAW,YACXC,IAAK,aAEP,CACEpB,MAAO,WACPmB,UAAW,WACXC,IAAK,YAEP,CACEpB,MAAO,iBACPmB,UAAW,UACXC,IAAK,UACLC,OAAQ,SAACyF,GACP,OACE,SAAC,IAAD,CACEvG,KAAK,UACLE,UAAU,SACVE,MAAO,CAAEe,MAAO,OAChBX,QAAS,kBAAMsH,GAAsB,EAA5B,EAJX,UAME,SAAC,KAAD,CAAS3H,GAAE,sCAAiCoG,GAA5C,sBAGL,GAEH,CACE9G,MAAO,QACPmB,UAAW,QACXC,IAAK,SAEP,CACEpB,MAAO,OACPmB,UAAW,OACXC,IAAK,QAEP,CACEpB,MAAO,SACPmB,UAAW,SACXC,IAAK,SACLC,OAAQ,SAACoD,GACP,OAAO,cAAGhE,UAAS,iBAAYiI,EAAkBjE,IAA1C,SAAsDA,GAC9D,GAEH,CACEzE,MAAO,QACPmB,UAAW,QACXC,IAAK,SAEP,CACEpB,MAAO,SACPmB,UAAW,SACXC,IAAK,SACLC,OAAQ,YAA8B,IAA3B5B,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACtB,OACE,SAAC,EAAD,CACEF,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,aAAcA,EACdC,eAAgBA,GAGrB,IA6DL,OACE,gCACGsI,IAAe,SAAC,EAAD,CAActG,KAfjB,WACfhC,GAAe,EAChB,EAaiDiC,SAZ7B,WACnBjC,GAAe,EAChB,IAWIuI,IACC,SAAC,EAAD,CAAuBvG,KAVL,WACtBwG,GAAsB,EACvB,EAQmDvG,SAPxB,WAC1BuG,GAAsB,EACvB,KAQG,UAACT,EAAD,CAAuBG,IAAKA,EAAKjB,GAAG,cAApC,WACE,eAAInG,MAAO,CAAEe,MAAO,OAAQkH,UAAW,SAAU9E,aAAc,QAA/D,0BAEE,iBAAKrD,UAAU,QAAf,WACE,SAAC,IAAD,CACE0C,YAAY,sBACZC,YAAU,EACVC,KAAK,QACLC,SAtCS,SAACC,GAChBtB,EAAUuB,SACZC,aAAaxB,EAAUuB,SAEzBvB,EAAUuB,QAAUE,YAAW,WAC7Bd,GAAgB,SAACe,GACf,OAAO,kBAAKA,GAAZ,IAAkB3D,MAAOuD,EAAEK,OAAOC,OACnC,GACF,GAAE,IACJ,EA8BWlD,MAAO,CACLmD,aAAc,OACdpC,MAAO,MACPqC,WAAY,WAGhB,SAAC,IAAD,CACE7C,QAASA,EACTkD,WAlFW,WACrB,IACiB,EADbC,EAAO,GACP4D,IACF,UAAAA,EAAY3D,YAAZ,SAAkBC,SAAQ,SAACC,GACzB,IAAIC,EAAS,GACb,OAAQxB,OAAOuB,EAAKC,SAClB,KAAK,EACHA,EAAS,cACT,MACF,KAAK,EACHA,EAAS,SACT,MACF,QACEA,EAAS,UAEbJ,EAAKK,KAAK,CACRmE,MAAOrE,EAAKqE,MACZC,UAAWtE,EAAKsE,UAChBC,SAAUvE,EAAKuE,SACfC,QAASxE,EAAKsC,GACdmC,MAAOzE,EAAKyE,MACZxJ,KAAM+E,EAAK/E,KACXgF,OAAQA,EACRzE,MAAOwE,EAAKxE,MACZkJ,OAAQ,CAAEzJ,KAAM+E,EAAK/E,KAAMC,MAAO8E,EAAKsC,GAAInH,OAAQ6E,EAAKY,QAE3D,KAEH,OAAOf,CACR,CAqDuBgB,GACZC,YAAY,EACZC,QAAS2C,KAEX,gBAAKzH,UAAU,aAAf,UACE,SAAC,IAAD,CACE6C,SA1Da,SAACZ,EAAMuB,GAChCrB,GAAgB,SAACe,GACf,OAAO,kBAAKA,GAAZ,IAAkBlB,MAAOwB,EAAUvB,KAAMA,GAC1C,GACF,EAuDaQ,OAAkB,OAAX+E,QAAW,IAAXA,OAAA,EAAAA,EAAa/E,QApMd,GAqMNgB,iBAAe,EACfC,iBAAe,cAQ9B,CACD,OAAegF,EAAAA,EAAAA,YAAWtB,E","sources":["components/Account/ListAppCreated/ActionGroup/ActionGroup.jsx","components/Account/ListAppCreated/CommentModal/styled.js","components/Account/ListAppCreated/CommentModal/CommentModal.jsx","components/Account/ListAppCreated/HistoryUpdateAppModal/HistoryCard/styled.js","components/Account/ListAppCreated/HistoryUpdateAppModal/HistoryCard/HistoryCard.jsx","components/Account/ListAppCreated/HistoryUpdateAppModal/HistoryCard/HistoryCardList.jsx","components/Account/ListAppCreated/HistoryUpdateAppModal/HistoryUpdateAppModal..jsx","components/Account/ListAppCreated/styled.js","components/Account/ListAppCreated/ListAppCreated.jsx"],"sourcesContent":["import { Button, Popconfirm, Space } from 'antd';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteApp, getCreatedApp } from '../../../../redux/slice/detailApp.slice';\r\n\r\nconst ActionGroup = ({ slug, appId, appId2, pagingParams, setIsModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Space>\r\n      <Popconfirm\r\n        title=\"Are you sure delete this Appï¼Ÿ\"\r\n        okText=\"Yes\"\r\n        cancelText=\"No\"\r\n        onConfirm={() =>\r\n          dispatch(\r\n            deleteApp({\r\n              appId,\r\n              callBack: () => {\r\n                dispatch(getCreatedApp(pagingParams));\r\n              },\r\n            })\r\n          )\r\n        }\r\n      >\r\n        <Button type=\"primary\" danger className=\"button\">\r\n          Delete\r\n        </Button>\r\n      </Popconfirm>\r\n\r\n      <Button type=\"primary\" className=\"button\">\r\n        <NavLink to={`/for-publishers/edit-app/${slug}`}>Edit</NavLink>\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        className=\"button\"\r\n        style={{ backgroundColor: 'yellow', border: 'none', color: 'black' }}\r\n        onClick={() => setIsModalOpen(true)}\r\n      >\r\n        <NavLink\r\n          style={{ backgroundColor: 'yellow', border: 'none', color: 'black' }}\r\n          to={`/created-app/${appId2}`}\r\n        >\r\n          Comment\r\n        </NavLink>\r\n      </Button>\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default ActionGroup;\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalCommentWrapper = styled.div`\r\n  .ant-modal-content {\r\n    width: 30rem !important;\r\n  }\r\n  .user_avatar {\r\n    width: 20rem;\r\n  }\r\n`;\r\n","import { Button, Image, Input, Modal, Pagination, Table } from 'antd';\r\nimport React from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAllAppComments } from '../../../../redux/slice/detailApp.slice';\r\nimport { URL_API } from '../../../../utils';\r\nimport { ModalCommentWrapper } from './styled';\r\nimport Loading from '../../../../layout/components/Loading/Loading';\r\nconst columns = [\r\n  {\r\n    title: 'User',\r\n    dataIndex: 'user',\r\n    key: 'user',\r\n    render: (avatar) => {\r\n      return <Image className=\"user_avatar\" src={`${URL_API}/${avatar}`} preview={false} />;\r\n    },\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'cover',\r\n  },\r\n  {\r\n    title: 'Comment',\r\n    dataIndex: 'comment',\r\n    key: 'comment',\r\n    width: '55%',\r\n    height: 'auto',\r\n  },\r\n  {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n  },\r\n  {\r\n    title: 'Rating',\r\n    dataIndex: 'rating',\r\n    key: 'rating',\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n  },\r\n\r\n  {\r\n    title: 'Update at',\r\n    dataIndex: 'updated_at',\r\n    key: 'updated_at',\r\n  },\r\n  {\r\n    title: 'Dislike',\r\n    dataIndex: 'dislike',\r\n    key: 'dislike',\r\n  },\r\n  {\r\n    title: 'Like',\r\n    dataIndex: 'approval',\r\n    key: 'approval',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: 'actions',\r\n    key: 'actions',\r\n    render: ({ appId, commentId }) => {\r\n      return (\r\n        <Button type=\"primary\" className=\"button\">\r\n          Reply\r\n        </Button>\r\n      );\r\n    },\r\n  },\r\n];\r\nconst CommentModal = ({ onOk, onCancel }) => {\r\n  let DEFAULT_LIMIT = 10;\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const searchRef = useRef();\r\n  const { appComments, isLoadingGetComment } = useSelector((state) => state.detailApp);\r\n  const [pagingParams, setPagingParams] = useState({\r\n    limit: DEFAULT_LIMIT,\r\n    page: 0,\r\n    search: '',\r\n  });\r\n  useEffect(() => {\r\n    const payload = {\r\n      appId: params.appId,\r\n      limit: pagingParams.limit,\r\n      page: pagingParams.page,\r\n      search: pagingParams.search,\r\n    };\r\n    dispatch(getAllAppComments(payload));\r\n  }, [pagingParams]);\r\n  const renderRowTable = () => {\r\n    let rows = [];\r\n    if (appComments) {\r\n      appComments.data?.forEach((item) => {\r\n        let status = '';\r\n        switch (Number(item.status)) {\r\n          case '0':\r\n            status = 'Not approve';\r\n            break;\r\n          case '1':\r\n            status = 'Active';\r\n            break;\r\n          default:\r\n            status = 'Waiting';\r\n        }\r\n\r\n        rows.push({\r\n          comment: item.comment,\r\n          name: item.title,\r\n          title: item.title,\r\n          rating: item.rating,\r\n          user: item.user?.avatar,\r\n          updated_at: item.updated_at,\r\n          status: status,\r\n          dislike: item.dislike,\r\n          like: item.approval,\r\n          actions: { appId: item.appid },\r\n        });\r\n      });\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  const onChangePagination = (page, pageSize) => {\r\n    setPagingParams((prev) => {\r\n      return { ...prev, limit: pageSize, page: page };\r\n    });\r\n  };\r\n  const handleSearch = (e) => {\r\n    if (searchRef.current) {\r\n      clearTimeout(searchRef.current);\r\n    }\r\n    searchRef.current = setTimeout(() => {\r\n      setPagingParams((prev) => {\r\n        return { ...prev, search: e.target.value };\r\n      });\r\n    }, 1000);\r\n  };\r\n  //   if (isLoadingGetComment) return <Loading />;\r\n  return (\r\n    <ModalCommentWrapper>\r\n      <Modal title=\"App Comment\" open={true} onOk={onOk} onCancel={onCancel}>\r\n        {Number(appComments?.total) !== 0 && (\r\n          <Input\r\n            placeholder=\"Find somethings....\"\r\n            allowClear\r\n            size=\"large\"\r\n            onChange={handleSearch}\r\n            style={{\r\n              marginBottom: '4rem',\r\n              width: '50%',\r\n              marginLeft: 'auto',\r\n              borderRadius: '5px',\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <div className=\"pagination_modal\">\r\n          {Number(appComments?.total) !== 0 && (\r\n            <Pagination\r\n              onChange={onChangePagination}\r\n              total={appComments?.total || DEFAULT_LIMIT}\r\n              showSizeChanger\r\n              showQuickJumper\r\n            />\r\n          )}\r\n        </div>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={renderRowTable()}\r\n          pagination={false}\r\n          loading={isLoadingGetComment}\r\n        />\r\n      </Modal>\r\n    </ModalCommentWrapper>\r\n  );\r\n};\r\n\r\nexport default CommentModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardHistoryWrapper = styled.div`\r\n  box-shadow: rgb(0 0 0 / 24%) 0px 3px 8px;\r\n  padding: 2rem;\r\n  border-radius: 15px;\r\n  margin-bottom: 2rem;\r\n  min-width: 70rem;\r\n  p {\r\n    margin-bottom: 1rem;\r\n    width: 100%;\r\n    margin-right: 5rem;\r\n    box-shadow: rgb(50 50 93 / 25%) 0px 2px 5px -1px, rgb(0 0 0 / 30%) 0px 1px 3px -1px;\r\n    padding: 5px 2rem;\r\n    border-radius: 5px;\r\n  }\r\n  .label {\r\n    color: #4e7093;\r\n    text-transform: uppercase;\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { CardHistoryWrapper } from './styled';\r\n\r\nconst HistoryCard = ({ data }) => {\r\n  return (\r\n    <CardHistoryWrapper>\r\n      <h1>\r\n        <span className=\"\">Update At</span>\r\n        <span className=\"detail\"> {moment(data.updated_at).format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n      </h1>\r\n      <p>\r\n        <span className=\"label\">Description</span>{' '}\r\n        <span className=\"detail\">{data.description} </span>\r\n      </p>\r\n      <p>\r\n        <span className=\"label\">App Version</span>\r\n        <span className=\"detail\"> {data.app_version} </span>\r\n      </p>\r\n      <p>\r\n        <span className=\"label\">App ID</span>\r\n        <span className=\"detail\"> {data.id_app} </span>\r\n      </p>\r\n      <p>\r\n        <span className=\"label\">Created At</span>\r\n        <span className=\"detail\"> {moment(data.created_at).format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n      </p>\r\n    </CardHistoryWrapper>\r\n  );\r\n};\r\n\r\nexport default HistoryCard;\r\n","import React from 'react';\r\nimport HistoryCard from './HistoryCard';\r\n\r\nconst HistoryCardList = ({ historyUpdate }) => {\r\n  return (\r\n    <>\r\n      {historyUpdate &&\r\n        historyUpdate.map((data, index) => {\r\n          return <HistoryCard key={`history-${index}`} data={data} />;\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryCardList;\r\n","import { Input, Modal, Select } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loading from '../../../../layout/components/Loading/Loading';\r\nimport {\r\n  getAppHistoryUpdate,\r\n  getCategoriesAndLanguage,\r\n} from '../../../../redux/slice/detailApp.slice';\r\nimport HistoryCardList from './HistoryCard/HistoryCardList';\r\n\r\nconst HistoryUpdateAppModal = ({ onOk, onCancel }) => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const searchRef = useRef();\r\n  const [historyParams, setHistoryParams] = useState({ keyword: '', locale: '' });\r\n  const [defaultLocale, setDefaultLocale] = useState(null);\r\n  const { historyUpdate, isLoadingGetHistory, statusGetHistory, languages, isLoading } =\r\n    useSelector((state) => state.detailApp);\r\n  const getHistoryUpdate = (locale) => {\r\n    dispatch(\r\n      getAppHistoryUpdate({\r\n        appId: params.id,\r\n        keyword: historyParams.keyword,\r\n        locale: locale || historyParams.locale,\r\n      })\r\n    );\r\n  };\r\n  const getCategoryAndLanguage = () => {\r\n    dispatch(getCategoriesAndLanguage())\r\n      .unwrap()\r\n      .then((res) => {\r\n        getHistoryUpdate(res.language[0].code);\r\n        setDefaultLocale(res.language[0].code);\r\n      });\r\n  };\r\n  const handleSearch = (e) => {\r\n    if (searchRef.current) {\r\n      clearTimeout(searchRef.current);\r\n    }\r\n    searchRef.current = setTimeout(() => {\r\n      setHistoryParams((prev) => ({ ...prev, keyword: e.target.value }));\r\n    }, 1000);\r\n  };\r\n  const handleChangeLocale = (e) => {\r\n    setHistoryParams((prev) => ({ ...prev, locale: e }));\r\n  };\r\n  useEffect(() => {\r\n    getCategoryAndLanguage();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      getHistoryUpdate();\r\n    }\r\n  }, [historyParams]);\r\n  const renderOption = () => {\r\n    let res =\r\n      languages &&\r\n      languages.map((item, index) => {\r\n        return {\r\n          key: index,\r\n          value: item.code,\r\n          label: item.language,\r\n        };\r\n      });\r\n    return res;\r\n  };\r\n  console.log(defaultLocale);\r\n  return (\r\n    <div>\r\n      <Modal title=\"History update of app\" open={true} onOk={onOk} onCancel={onCancel}>\r\n        {defaultLocale !== null && (\r\n          <>\r\n            <p>Choose Locale</p>\r\n            <Select\r\n              style={{\r\n                width: '100%',\r\n                margin: 'auto',\r\n                marginBottom: '2rem',\r\n              }}\r\n              defaultValue={defaultLocale}\r\n              onChange={handleChangeLocale}\r\n              options={renderOption()}\r\n            />\r\n            <Input\r\n              placeholder=\"Enter your App Version to find....\"\r\n              allowClear\r\n              size=\"large\"\r\n              onChange={handleSearch}\r\n              style={{\r\n                marginBottom: '4rem',\r\n                width: '50%',\r\n                marginLeft: 'auto',\r\n                borderRadius: '5px',\r\n              }}\r\n            />\r\n            {isLoadingGetHistory && statusGetHistory !== 'success' ? (\r\n              <Loading />\r\n            ) : (\r\n              <HistoryCardList historyUpdate={historyUpdate} />\r\n            )}\r\n          </>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryUpdateAppModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const ListAppCreatedWrapper = styled.div`\r\n  background: var(--bg-dark);\r\n  padding: 1rem;\r\n  h1 {\r\n    color: white;\r\n  }\r\n  &&& {\r\n    .ant-select:not(.ant-select-customize-input) .ant-select-selector {\r\n      border: none;\r\n    }\r\n    .ant-pagination {\r\n      color: white;\r\n    }\r\n    .ant-table table {\r\n      padding: 5rem;\r\n    }\r\n    .ant-table-row {\r\n      transition: all 0.4s;\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n      }\r\n    }\r\n  }\r\n  .button {\r\n    transition: all 0.5s;\r\n    color: white;\r\n    padding: 5px 1rem;\r\n    border-radius: 4px;\r\n    box-shadow: rgb(0 0 0 / 24%) 0px 3px 8px;\r\n    text-align: center;\r\n\r\n    &:active {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n  .status_active {\r\n    background: #2cbc63;\r\n    clip-path: polygon(10px 0%, 100% 0%, 100% 100%, 10px 100%, 0 50%);\r\n  }\r\n\r\n  .status_waiting {\r\n    background: var(--bg-blue);\r\n    clip-path: polygon(10px 0%, 100% 0%, 100% 100%, 10px 100%, 0 50%);\r\n  }\r\n  .status_reject {\r\n    background: red;\r\n    clip-path: polygon(10px 0%, 100% 0%, 100% 100%, 10px 100%, 0 50%);\r\n  }\r\n  .table {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .pagination {\r\n    background: #1c212f;\r\n    padding: 1rem;\r\n    margin-top: 2rem;\r\n    color: white;\r\n  }\r\n  .feature {\r\n    display: flex;\r\n  }\r\n`;\r\n","import { Avatar, Button, Input, Pagination, Popconfirm, Space, Table } from 'antd';\r\nimport React, { forwardRef, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteApp, getCreatedApp } from '../../../redux/slice/detailApp.slice';\r\nimport { URL_API } from '../../../utils';\r\nimport ActionGroup from './ActionGroup/ActionGroup';\r\nimport CommentModal from './CommentModal/CommentModal';\r\nimport HistoryUpdateAppModal from './HistoryUpdateAppModal/HistoryUpdateAppModal.';\r\nimport { ListAppCreatedWrapper } from './styled';\r\n\r\nfunction ListAppCreated(_, ref) {\r\n  let DEFAULT_LIMIT = 10;\r\n  const dispatch = useDispatch();\r\n  const searchRef = React.useRef();\r\n\r\n  const { createdApps, isLoadingCreatedApps } = useSelector((state) => state.detailApp);\r\n  const [pagingParams, setPagingParams] = useState({\r\n    limit: DEFAULT_LIMIT,\r\n    page: 0,\r\n    title: '',\r\n  });\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isModalOpenHistory, setIsModalOpenHistory] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(getCreatedApp(pagingParams));\r\n  }, [pagingParams]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      localStorage.setItem('pagingParams', JSON.stringify(pagingParams));\r\n    };\r\n  }, []);\r\n  const renderStatusClass = (statusApp) => {\r\n    switch (statusApp) {\r\n      case 'Active':\r\n        return 'status_active';\r\n      case 'Waiting':\r\n        return 'status_waiting';\r\n      default:\r\n        return 'status_rejected';\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      title: 'Cover',\r\n      dataIndex: 'cover',\r\n      key: 'cover',\r\n      render: (src) => {\r\n        return <Avatar src={src ? `${URL_API}/${src}` : `https://joeschmoe.io/api/v1/random`} />;\r\n      },\r\n    },\r\n    {\r\n      title: 'Developer',\r\n      dataIndex: 'developer',\r\n      key: 'developer',\r\n    },\r\n    {\r\n      title: 'Installs',\r\n      dataIndex: 'installs',\r\n      key: 'installs',\r\n    },\r\n    {\r\n      title: 'History Update',\r\n      dataIndex: 'history',\r\n      key: 'history',\r\n      render: (id) => {\r\n        return (\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"button\"\r\n            style={{ width: '90%' }}\r\n            onClick={() => setIsModalOpenHistory(true)}\r\n          >\r\n            <NavLink to={`/created-app/history-update/${id}`}>History</NavLink>\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Score',\r\n      dataIndex: 'score',\r\n      key: 'score',\r\n    },\r\n    {\r\n      title: 'Slug',\r\n      dataIndex: 'slug',\r\n      key: 'slug',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => {\r\n        return <p className={`button ${renderStatusClass(status)}`}>{status}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      render: ({ slug, appId, appId2 }) => {\r\n        return (\r\n          <ActionGroup\r\n            slug={slug}\r\n            appId={appId}\r\n            appId2={appId2}\r\n            pagingParams={pagingParams}\r\n            setIsModalOpen={setIsModalOpen}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const renderRowTable = () => {\r\n    let rows = [];\r\n    if (createdApps) {\r\n      createdApps.data?.forEach((item) => {\r\n        let status = '';\r\n        switch (Number(item.status)) {\r\n          case 0:\r\n            status = 'Not approve';\r\n            break;\r\n          case 1:\r\n            status = 'Active';\r\n            break;\r\n          default:\r\n            status = 'Waiting';\r\n        }\r\n        rows.push({\r\n          cover: item.cover,\r\n          developer: item.developer,\r\n          installs: item.installs,\r\n          history: item.id,\r\n          score: item.score,\r\n          slug: item.slug,\r\n          status: status,\r\n          title: item.title,\r\n          action: { slug: item.slug, appId: item.id, appId2: item.appid },\r\n        });\r\n      });\r\n    }\r\n    return rows;\r\n  };\r\n  const onChangePagination = (page, pageSize) => {\r\n    setPagingParams((prev) => {\r\n      return { ...prev, limit: pageSize, page: page };\r\n    });\r\n  };\r\n  const handleSearch = (e) => {\r\n    if (searchRef.current) {\r\n      clearTimeout(searchRef.current);\r\n    }\r\n    searchRef.current = setTimeout(() => {\r\n      setPagingParams((prev) => {\r\n        return { ...prev, title: e.target.value };\r\n      });\r\n    }, 1000);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleOkHistory = () => {\r\n    setIsModalOpenHistory(false);\r\n  };\r\n  const handleCancelHistory = () => {\r\n    setIsModalOpenHistory(false);\r\n  };\r\n  return (\r\n    <>\r\n      {isModalOpen && <CommentModal onOk={handleOk} onCancel={handleCancel} />}\r\n      {isModalOpenHistory && (\r\n        <HistoryUpdateAppModal onOk={handleOkHistory} onCancel={handleCancelHistory} />\r\n      )}\r\n\r\n      <ListAppCreatedWrapper ref={ref} id=\"created-app\">\r\n        <h1 style={{ width: '100%', textAlign: 'center', marginBottom: '5rem' }}>CREATED APP</h1>\r\n        {true && (\r\n          <div className=\"table\">\r\n            <Input\r\n              placeholder=\"Find somethings....\"\r\n              allowClear\r\n              size=\"large\"\r\n              onChange={handleSearch}\r\n              style={{\r\n                marginBottom: '4rem',\r\n                width: '50%',\r\n                marginLeft: 'auto',\r\n              }}\r\n            />\r\n            <Table\r\n              columns={columns}\r\n              dataSource={renderRowTable()}\r\n              pagination={false}\r\n              loading={isLoadingCreatedApps}\r\n            />\r\n            <div className=\"pagination\">\r\n              <Pagination\r\n                onChange={onChangePagination}\r\n                total={createdApps?.total || DEFAULT_LIMIT}\r\n                showSizeChanger\r\n                showQuickJumper\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ListAppCreatedWrapper>\r\n    </>\r\n  );\r\n}\r\nexport default forwardRef(ListAppCreated);\r\n"],"names":["slug","appId","appId2","pagingParams","setIsModalOpen","dispatch","useDispatch","title","okText","cancelText","onConfirm","deleteApp","callBack","getCreatedApp","type","danger","className","to","style","backgroundColor","border","color","onClick","ModalCommentWrapper","styled","columns","dataIndex","key","render","avatar","src","URL_API","preview","width","height","commentId","onOk","onCancel","params","useParams","searchRef","useRef","useSelector","state","detailApp","appComments","isLoadingGetComment","useState","limit","page","search","setPagingParams","useEffect","payload","getAllAppComments","open","Number","total","placeholder","allowClear","size","onChange","e","current","clearTimeout","setTimeout","prev","target","value","marginBottom","marginLeft","borderRadius","pageSize","showSizeChanger","showQuickJumper","dataSource","rows","data","forEach","item","status","push","comment","name","rating","user","updated_at","dislike","like","approval","actions","appid","renderRowTable","pagination","loading","CardHistoryWrapper","moment","format","description","app_version","id_app","created_at","historyUpdate","map","index","keyword","locale","historyParams","setHistoryParams","defaultLocale","setDefaultLocale","isLoadingGetHistory","statusGetHistory","languages","isLoading","getHistoryUpdate","getAppHistoryUpdate","id","getCategoriesAndLanguage","unwrap","then","res","language","code","console","log","margin","defaultValue","options","label","Loading","ListAppCreatedWrapper","ListAppCreated","_","ref","React","createdApps","isLoadingCreatedApps","isModalOpen","isModalOpenHistory","setIsModalOpenHistory","localStorage","setItem","JSON","stringify","renderStatusClass","statusApp","textAlign","cover","developer","installs","history","score","action","forwardRef"],"sourceRoot":""}