{"version":3,"file":"static/js/373.946e377e.chunk.js","mappings":"4YAKQA,EAAYC,EAAAA,EAAAA,QACL,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,KACAC,EACC,EADDA,MAEMC,EAA0B,CAC9BC,SAAU,UACVC,OAAQ,wBACRC,UAAU,EACVC,OAAQ,mDACRC,SAAU,SAACC,GAAW,EACtBC,OAN8B,SAMvBC,GAAK,GAEd,OACE,0BACE,SAAC,KAAD,CACEb,QAASA,EACTG,KAAMA,EACNW,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWX,MAAOA,EAAlB,WACE,UAACP,GAAD,0BACMQ,GACAU,GAFN,IAGEC,SAAU,EACVV,SAAS,UACTC,OAAO,wBALT,WAOE,cAAGU,UAAU,uBAAb,UACE,SAACC,EAAA,EAAD,OAEF,cAAGD,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,yCAEF,iBAAKA,UAAU,OAAf,WACE,eAAGA,UAAU,OAAb,+CACqC,KACnC,iBAAMA,UAAU,UAAhB,qBAEF,eAAGA,UAAU,OAAb,+BACmB,iBAAMA,UAAU,UAAhB,wBADnB,OAEE,iBAAMA,UAAU,UAAhB,wBAFF,OAGE,iBAAMA,UAAU,UAAhB,8BAGHhB,IACC,iBAAKgB,UAAU,gBAAf,WACE,4CACA,SAAC,IAAD,CACEE,SAAS,EACTC,IAAG,UAAKC,EAAAA,GAAL,YAAgBpB,GACnBqB,IAAI,gBACJL,UAAU,cAIhB,cAAGA,UAAU,gBAAb,SAA8Bf,MAvC1B,KA6Cf,C,iBCtEYqB,EAASC,EAAAA,GACZ,CACNC,MAAOD,EAAAA,KAAaE,WACpBC,MAAOH,EAAAA,KAAaE,WACpBE,QAASJ,EAAAA,KAENE,WACAG,IAAI,GAAI,2CACXC,iBAAkBN,EAAAA,KAEfE,WACAG,IAAI,IAAM,iDACbE,mBAAoBP,EAAAA,KAAaE,WACjCM,SAAUR,EAAAA,KAAaE,WACvBO,KAAMT,EAAAA,KAAaE,WACnBQ,KAAMV,EAAAA,KAAaE,WAEnBS,MAAOX,EAAAA,KAAaK,IAAI,EAAG,2CAC3BO,MAAOZ,EAAAA,KAEJa,KAAK,WAAY,0CAA0C,SAACC,GAAW,IAAD,EACrE,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,WAG3BF,EAAMC,UACDD,EAAMC,SAAS,GAAGE,KAAO,KAAO,KAAO,EAGjD,IAEAJ,KACC,aACA,sDACA,SAACC,GAAW,IAAD,EACT,IAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAC7B,OAAO,EAET,GAAIF,EAAMC,SAAU,CAAC,IAAD,YACDD,EAAMC,UADL,IAClB,2BAAiC,CAAC,IAAzBG,EAAwB,QAC/B,MACgB,eAAdA,EAAKT,MACS,cAAdS,EAAKT,MACS,cAAdS,EAAKT,IAMR,CAXiB,+BAYnB,CACD,OAAO,CACR,IAELU,QAASnB,EAAAA,KAENa,KAAK,WAAY,4CAA4C,SAACC,GAAW,IAAD,EACvE,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,WAG3BF,EAAMC,UACDD,EAAMC,SAAS,GAAGE,KAAO,KAAO,KAAO,IAGjD,IAeHG,OAAQpB,EAAAA,KAELa,KACC,aACA,4CACA,SAACC,GAAW,IAAD,EACT,IAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAC7B,OAAO,EAET,GAAIF,EAAMC,SAAU,CAAC,IAAD,YACDD,EAAMC,UADL,IAClB,2BAAiC,CAAC,IAAzBG,EAAwB,QAC/B,MAAkB,eAAdA,EAAKT,MAAuC,cAAdS,EAAKT,IAKxC,CAPiB,+BAQnB,CACD,OAAO,CACR,IAEFI,KAAK,aAAc,gCAAgC,SAACC,GAAW,IAAD,IAC7D,OAAKA,GAAqC,KAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,YAItB,OAALF,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,QAAS,EAI/B,MAEJd,WACUmB,EAAQ,CACnB,CACEC,YAAa,MACbrB,MAAO,OAET,CACEqB,YAAa,YACbrB,MAAO,aAET,CACEqB,YAAa,eACbrB,MAAO,iBAGEsB,EAAO,CAClB,CACED,YAAa,IACbE,GAAI,EACJvB,MAAO,OAET,CACEqB,YAAa,IACbE,GAAI,EACJvB,MAAO,SAGEwB,EAAc,CACzB,CACE,CACE9C,KAAM,QACNC,MAAO,SACP8C,YAAa,eACbC,UAAU,GAEZ,CACEhD,KAAM,QACNC,MAAO,QACP8C,YAAa,oBAGjB,CACE,CACE/C,KAAM,UACNC,MAAO,UACP8C,YAAa,iBAEf,CACE/C,KAAM,mBACNC,MAAO,cACP8C,YAAa,sBAIjB,CACE,CACE/C,KAAM,gBACNC,MAAO,gBACP8C,YAAa,uBAEf,CACE/C,KAAM,cACNC,MAAO,cACP8C,YAAa,sBAGjB,CACE,CACE/C,KAAM,iBACNC,MAAO,iBACP8C,YAAa,wBAEf,CACE/C,KAAM,iBACNC,MAAO,iBACP8C,YAAa,yBAGjB,CACE,CACE/C,KAAM,cACNC,MAAO,cACP8C,YAAa,uB,WC/LNE,E,SAAiBC,GAAAA,IAAH,0jFCkBnBxD,EAAYC,EAAAA,EAAAA,QAEL,SAASwD,IAAW,IAAD,MAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACf,GAQIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbzB,MAAO,MAET0B,UAAUC,EAAAA,EAAAA,GAAYvC,KAXtBwC,EADF,EACEA,UACA/D,EAFF,EAEEA,QACAgE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,SACAC,EANF,EAMEA,SACaC,EAPf,EAOEC,UAAaD,OAQf,GAOIE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IANdC,EADF,EACEA,UACAC,EAFF,EAEEA,WAEAC,GAJF,EAGEC,UAHF,EAIED,mBACAE,EALF,EAKEA,0BACAC,EANF,EAMEA,iBAEF,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,GAAf,KAEMC,IAAWC,EAAAA,EAAAA,MAEXC,GAAc,CAClB,CACE,CACEnF,KAAM,WACNC,MAAO,WACPmF,KAAMb,GAER,CACEvE,KAAM,OACNC,MAAO,OACPmF,KAAM1C,IAGV,CACE,CACE1C,KAAM,OACNC,MAAO,OACPmF,KAAMxC,GAGR,CACE5C,KAAM,qBACNC,MAAO,qBACPmF,KAAMd,KAINe,GAAe,SAACD,GAAU,IAAD,EACvBE,EAAU,UAAGF,EAAKA,YAAR,aAAG,EAAWG,KAAI,SAACC,GACjC,MAAO,CACLrD,MAAOqD,EAAK7C,aAAe6C,EAAK3C,GAChC5C,MAAOuF,EAAKC,UAAYD,EAAKlE,MAEhC,IASD,MARS,CACP,CACEa,MAAO,GACPlC,MAAM,cAAD,OAAgBmF,EAAKnF,OAC1B+C,UAAU,IAJL,eAMJsC,GAGN,EAEKI,GAAoB,CACxBvF,SAAU,UACVC,OAAQ,wBACRC,UAAU,EACVC,OAAQ,mDACRC,SAAU,SAACC,GAAW,EACtBC,OANwB,SAMjBC,GAAK,GAERiF,GAAqB,WACzBvC,GAASwC,EAAAA,EAAAA,IAAsB,CAAEC,KAAI,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAQuC,KAAMC,KAAMf,IAC5D,EACKgB,GAAoB,WACxBd,GAAS,WACV,EAwCKe,GAAsB,SAAC7D,GAC3B6B,EAAS,OAAQ7B,GACH,MAAVA,EACF2C,GAAa,GACM,MAAV3C,GACT2C,GAAa,EAEhB,EAEKmB,GAAyB,SAACC,GAAY,IAAD,IACzC9C,GACE+C,EAAAA,EAAAA,IAAiB,CACfC,WAAYF,EACZ1E,MAAK,OAAEgD,QAAF,IAAEA,GAAF,UAAEA,EAAmBY,YAArB,iBAAE,EAAyBiB,WAA3B,aAAE,EAA8B7E,MACrC8E,OAAQX,KAGb,EAiED,OA/DAY,EAAAA,EAAAA,YAAU,WAAO,IAAD,QACRC,EAAWC,OAAOC,KAAK9C,KACvB+C,EAAa,CAAC,EACpB,GAAInC,EAAmB,CAAC,IAAD,QACwB,OAAxB,OAAjBA,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,mBAAyBiB,WAAzB,eAA8BO,QAChC9B,GAAa,GACqC,OAAxB,OAAjBN,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,mBAAyBiB,WAAzB,eAA8BO,SACvC9B,GAAa,GAJM,gBAMP0B,GANO,IAMrB,2BAAwB,CAAC,IAAhBK,EAAe,QACtB,GAAU,WAANA,EACFF,EAAWE,GAAK,OACX,IAAU,UAANA,GAAuB,WAANA,GAAwB,YAANA,EAC5C,SACK,GAAU,SAANA,EACT,cAAQrC,QAAR,IAAQA,GAAR,UAAQA,EAAmBY,YAA3B,iBAAQ,EAAyBiB,WAAjC,aAAQ,EAA8BvE,MACpC,IAAK,IACH6E,EAAWE,GAAK,MAChB,MACF,IAAK,IACHF,EAAWE,GAAK,YAChB,MACF,QACEF,EAAWE,GAAK,oBAGf,GAAU,qBAANA,EAA0B,CACA,IAAD,EAAlC,UAAIrC,QAAJ,IAAIA,GAAAA,EAAmBY,KAAK5E,KAC1BmG,EAAWE,GAAX,OAAgBrC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBY,YAAnC,aAAgB,EAAyB5E,KAAzB,iBAEhBmG,EAAWE,GAAK,EAEnB,MAAM,GAAU,uBAANA,EAA4B,CACF,IAAD,EAAlC,UAAIrC,QAAJ,IAAIA,GAAAA,EAAmBY,KAAK5E,KAC1BmG,EAAWE,GAAX,OAAgBrC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBY,YAAnC,aAAgB,EAAyB5E,KAAzB,aAEhBmG,EAAWE,GAAK,EAEnB,MAAM,GAAU,SAANA,EAAc,CAAC,IAAD,IACvBF,EAAWE,GAAX,OAAgBrC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBY,YAAnC,iBAAgB,EAAyBiB,WAAzC,aAAgB,EAA8BO,MAC/C,KAAM,CAAC,IAAD,EAC8B,IAK5B,EALP,UAAIpC,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBY,YAAvB,OAAI,EAAyB5E,KAC3BmG,EAAWE,IACQ,OAAjBrC,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,eAAyBiB,IAAIQ,MAA7B,OACArC,QADA,IACAA,GADA,UACAA,EAAmBY,YADnB,aACA,EAAyB5E,KAAKqG,KAC9B,QAEFF,EAAWE,IAAsB,OAAjBrC,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,eAAyBiB,IAAIQ,KAAM,EAEtD,EACF,CA/CoB,+BAgDtB,CACDF,EAAU,MAAYG,OAAM,OAACtC,QAAD,IAACA,GAAD,UAACA,EAAmBY,YAApB,iBAAC,EAAyBiB,WAA1B,aAAC,EAA8BrE,OAAO+E,QAChE,GAEFjD,EAAM6C,EACP,GAAE,CAACnC,EAAmBZ,KACvB2C,EAAAA,EAAAA,YAAU,WACRnD,GAAS4D,EAAAA,EAAAA,MACV,GAAE,KACHT,EAAAA,EAAAA,YAAU,WACRU,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACrC,GAAE,KAED,UAACnE,EAAD,YACE,eAAIoE,MAAO,CAAEC,UAAW,UAAxB,uBACA,UAAC,IAAD,CAAMC,SAAU1D,GA5HD,SAAC1B,GAAW,IAAD,IACxBqF,EAAUf,OAAOgB,OAAO7D,IAAa,CAAEmB,OAAAA,IAC3C,GAAKF,QAA+B6C,IAAlBF,EAAQxF,MAO1B,GAAI,OAACwC,QAAD,IAACA,GAAD,UAACA,EAAmBY,YAApB,iBAAC,EAAyBiB,WAA1B,OAAC,EAA8BsB,aAAgBH,EAAQ/E,OAA3D,CAQA,IADA,IACA,MADagE,OAAOC,KAAKc,GACzB,eAAoB,CAAf,IACgB,EACW,EAErB,IAJFX,EAAC,KACR,GAAU,UAANA,EACF,aAAIW,EAAO,aAAX,OAAI,EAAkBjF,KACpBiF,EAAO,MAAP,UAAmBA,EAAO,MAAUjF,YAApC,aAAmB,EAAuBqF,mBAE1CJ,EAAQvF,MAAR,OAAgBuC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAmBY,YAAnC,iBAAgB,EAAyBiB,WAAzC,aAAgB,EAA8BpE,WAE3C,GAAU,YAAN4E,EAAiB,CAAC,IAAD,EACI,EAEvB,IAFP,aAAIW,EAAO,eAAX,OAAI,EAAoBjF,KACtBiF,EAAO,QAAP,UAAqBA,EAAO,QAAYjF,YAAxC,aAAqB,EAAyBqF,mBAE9CJ,EAAO,QAAP,OAAqBhD,QAArB,IAAqBA,GAArB,UAAqBA,EAAmBY,YAAxC,iBAAqB,EAAyBiB,WAA9C,aAAqB,EAA8BwB,QAEtD,MAAM,GAAU,WAANhB,EAAgB,CAAC,IAAD,EACzB,UAAIW,EAAO,cAAX,OAAI,EAAmBpF,WACrBoF,EAAO,QAAP,OAAwBA,EAAO,OAAWpF,UAE7C,CACF,CACD,IAAM0F,GAAWC,EAAAA,EAAAA,GAAkBP,GACnCpE,GAAS4E,EAAAA,EAAAA,IAAQ,CAAE5C,KAAM0C,EAAUG,SAAUlC,KAtB5C,MALChC,EAAS,SAAU,CACjBjC,KAAM,WACNoG,QAAS,4BATXnE,EAAS,QAAS,CAChBjC,KAAM,WACNoG,QAAS,6CAiCd,IAsFG,UACGzB,OAAOC,KAAKpC,GAAWjC,OAAS,GAC/B,iBAAKvB,UAAU,SAAf,WACE,qCACA,SAAC,IAAD,CACEqH,aAAa,GACb5H,SAAU,SAACG,GACToD,EAAM,CAAC,GACPkB,GAAUtE,GACV0C,GACEwC,EAAAA,EAAAA,IAAsB,CAAEC,KAAI,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAQuC,KAAMC,KAAMpF,IAErD,EACD0H,QAAO,CACL,CACEjG,MAAO,GACPlC,MAAO,0BACP+C,UAAU,IAJP,eAMFsB,EAAUiB,KAAI,SAACC,EAAM6C,GACtB,MAAO,CACLlG,MAAOqD,EAAK8C,KACZrI,MAAOuF,EAAKC,SAEf,YAKP,SAAC8C,EAAA,EAAD,IAEDxD,IACC,gCACGjC,EAAYyC,KAAI,SAACiD,EAAKH,GACrB,OACE,gBAAKvH,UAAU,MAAf,SACG0H,EAAIjD,KAAI,SAACC,EAAM6C,GACd,OACE,SAAC,KAAD,CAEExI,QAASA,EACTG,KAAMwF,EAAKxF,KACXW,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,iBAAKE,UAAU,aAAf,WACE,mBAAOA,UAAU,aAAjB,UAA+B0E,EAAKvF,MAApC,SACA,SAAC,KAAD,gBACE+C,UAAc,OAAJwC,QAAI,IAAJA,OAAA,EAAAA,EAAMxC,YAAY,GACxBpC,GAFN,IAGEmC,YAAayC,EAAKzC,YAClBjB,KAAM0D,EAAK1D,MAAQ,WAErB,cAAGhB,UAAU,gBAAb,mBACGmD,EAAOuB,EAAKxF,aADf,aACG,EAAmBkI,YAVlB,GAHHG,EAmBV,KAvBuBA,EA0B7B,IACAlD,GAAYI,KAAI,SAACiD,EAAKH,GACrB,OACE,gBAAKvH,UAAU,MAAf,SACG0H,EAAIjD,KAAI,SAACC,EAAM6C,GACd,OACE,SAAC,KAAD,CAEExI,QAASA,EACTG,KAAMwF,EAAKxF,KACXW,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,iBAAKE,UAAU,aAAf,WACE,mBAAOA,UAAU,aAAjB,UAA+B0E,EAAKvF,MAApC,SACA,SAAC,KAAD,kBACMW,GADN,IAEEuH,aAAa,GACb5H,SACgB,SAAdiF,EAAKxF,KACDgG,GACApF,EAAML,SAEZ6H,QAAS/C,GAAaG,OAExB,cAAG1E,UAAU,gBAAb,mBACGmD,EAAOuB,EAAKxF,aADf,aACG,EAAmBkI,YAdlB,GAHHG,EAuBV,KA3BuBA,EA8B7B,KACCxD,IACA,iBAAK/D,UAAU,aAAf,UACG,KACD,SAAC,KAAD,CACEuG,MAAO,CAAEoB,MAAO,QAChB5I,QAASA,EACTG,KAAK,QACLW,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWX,MAAM,YAAjB,WACE,SAAC,KAAD,kBACMW,GADN,IAEEmC,YAAY,kBACZjB,KAAK,aAEP,cAAGhB,UAAU,gBAAb,gBAA8BmD,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAQjC,aAAtC,aAA8B,EAAekG,YAPzC,QAad,SAACtI,EAAD,CACEC,QAASA,EACTC,cAAa,OAAE0E,QAAF,IAAEA,GAAF,UAAEA,EAAmBY,YAArB,iBAAE,EAAyBiB,WAA3B,aAAE,EAA8BpE,MAC7ClC,WAAU,OAAEkE,QAAF,IAAEA,GAAF,UAAEA,EAAQhC,aAAV,aAAE,EAAeiG,QAC3BlI,KAAK,QACLC,MAAM,eAER,SAAC,KAAD,CACEJ,QAASA,EACTG,KAAK,SACLW,OAAQ,0BAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWX,MAAM,aAAjB,WACE,UAAC,GAAD,0BACMyF,IACA9E,GAFN,IAGEP,UAAU,EACVF,SAAS,UACTC,OAAO,wBALT,WAOE,cAAGU,UAAU,uBAAb,UACE,SAACC,EAAA,EAAD,OAEF,cAAGD,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,mDAIF,iBAAKA,UAAU,OAAf,WACE,eAAGA,UAAU,OAAb,iCAEE,iBAAMA,UAAU,UAAhB,2BAEF,eAAGA,UAAU,OAAb,6BACmB,KACjB,iBAAMA,UAAU,UAAhB,wBAFF,OAGE,iBAAMA,UAAU,UAAhB,wBAHF,OAIE,iBAAMA,UAAU,UAAhB,+BAGJ,iBAAKA,UAAU,sBAAf,WACE,eACEuG,MAAO,CACLqB,cAAe,YACfC,OAAQ,UAHZ,iCAMuB,OAErBjE,GAyCA,SAAC6D,EAAA,EAAD,KAxCA,gBAAKzH,UAAU,cAAf,SACoB,OAAjB0D,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,mBAAyBiB,WAAzB,SAA8BsB,YAC7BiB,KAAKC,MAAL,OACErE,QADF,IACEA,GADF,UACEA,EAAmBY,YADrB,iBACE,EAAyBiB,WAD3B,aACE,EAA8BsB,aAC9BpC,KAAI,SAACC,EAAM6C,GACX,OACE,iBAAKvH,UAAU,QAAf,WACE,SAAC,IAAD,CAEEA,UAAU,aACVuG,MAAO,CACLyB,UAAW,OACXC,aAAc,QAEhB/H,SAAS,EACTC,IAAG,UAAKC,EAAAA,IAAL,OAAesE,GAClBrE,IAAI,cARCkH,IAWP,SAAC,IAAD,CACE/G,MAAM,6CACN0H,OAAO,MACPC,WAAW,KACXC,UAAW,kBAAMjD,GAAuBT,EAA7B,EAJb,UAME,SAAC,IAAD,CACE1D,KAAK,SACLqH,QAAS,kBAAMlD,GAAuBT,EAA7B,EAFX,mBAnBwB6C,EA4B/B,KAED,yCAQR,cAAGvH,UAAU,gBAAb,mBAA8BmD,EAAOxB,cAArC,aAA8B,EAAeyF,YArFzC,KAyFV,SAAC,KAAD,CACErI,QAASA,EACTG,KAAK,UACLW,OAAQ,0BAAGC,EAAH,EAAGA,MAAH,OACN,UAAC,SAAD,CAAWX,MAAM,UAAjB,WACE,UAAC,GAAD,kBACMW,GADN,IAEEP,UAAU,EACVD,OAAO,OACPS,SAAU,EAJZ,WAME,cAAGC,UAAU,uBAAb,UACE,SAACC,EAAA,EAAD,OAEF,cAAGD,UAAU,kBAAb,wDAGA,cAAGA,UAAU,kBAAb,sCAEF,iBAAKA,UAAU,OAAf,WACE,eAAGA,UAAU,OAAb,gDAEE,iBAAMA,UAAU,UAAhB,wBAEF,eAAGA,UAAU,OAAb,+BACmB,iBAAMA,UAAU,UAAhB,wBAGrB,cAAGA,UAAU,gBAAb,mBAA8BmD,EAAOzB,eAArC,aAA8B,EAAgB0F,WAC5B,OAAjB1D,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBY,YAAnB,mBAAyBiB,WAAzB,eAA8BwB,YAC7B,cACER,MAAO,CACL+B,OAAQ,mBACRC,QAAS,OACTP,UAAW,OACXQ,OAAQ,eALZ,UAQGC,EAAAA,EAAAA,IAAW,OAAC/E,QAAD,IAACA,GAAD,UAACA,EAAmBY,YAApB,iBAAC,EAAyBiB,WAA1B,aAAC,EAA8BwB,cAnC3C,OA4CF,KAAX9C,IACC,SAAC,IAAD,CAAQyE,SAAS,SAASC,QAAS9E,EAAnC,6BAOT,C","sources":["components/TermsAndServices/Upload/UploadSingleAvatar/UploadSingleAvatar.jsx","components/TermsAndServices/Upload/EditApp/constant.js","components/TermsAndServices/Upload/EditApp/styled.js","components/TermsAndServices/Upload/EditApp/EditApp.jsx"],"sourcesContent":["import { Form, Image, Upload } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { URL_API } from \"../../../../utils\";\r\nconst { Dragger } = Upload;\r\nexport default function UploadSingleAvatar({\r\n  control,\r\n  defaultAvatar,\r\n  errMessage,\r\n  name,\r\n  label,\r\n}) {\r\n  const propsUploadSingleAvatar = {\r\n    listType: \"picture\",\r\n    accept: \"image/png, image/jpeg\",\r\n    multiple: false,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange: (info) => {},\r\n    onDrop(e) {},\r\n  };\r\n  return (\r\n    <div>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        render={({ field }) => (\r\n          <Form.Item label={label}>\r\n            <Dragger\r\n              {...propsUploadSingleAvatar}\r\n              {...field}\r\n              maxCount={1}\r\n              listType=\"picture\"\r\n              accept=\"image/png, image/jpeg\"\r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n              </p>\r\n              <p className=\"ant-upload-text\">\r\n                Click or drag file to this area to upload\r\n              </p>\r\n              <p className=\"ant-upload-hint\">Upload your new avatar</p>\r\n            </Dragger>\r\n            <div className=\"note\">\r\n              <p className=\"hint\">\r\n                The size of file must be less than{\" \"}\r\n                <span className=\"special\">2MB</span>\r\n              </p>\r\n              <p className=\"hint\">\r\n                The type must be <span className=\"special\">image/jpeg</span> or\r\n                <span className=\"special\"> image/png</span> or\r\n                <span className=\"special\"> image/jpg</span>\r\n              </p>\r\n            </div>\r\n            {defaultAvatar && (\r\n              <div className=\"cover-wrapper\">\r\n                <p>Current Cover :</p>\r\n                <Image\r\n                  preview={false}\r\n                  src={`${URL_API}/${defaultAvatar}`}\r\n                  alt=\"Current Cover\"\r\n                  className=\"cover\"\r\n                />\r\n              </div>\r\n            )}\r\n            <p className=\"error_message\">{errMessage}</p>\r\n          </Form.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\nexport const schema = yup\r\n  .object({\r\n    title: yup.string().required(),\r\n    appid: yup.string().required(),\r\n    summary: yup\r\n      .string()\r\n      .required()\r\n      .max(80, \"Summary must be less than 80 characters\"),\r\n    full_description: yup\r\n      .string()\r\n      .required()\r\n      .max(4000, \"Description must be less than 4000 characters\"),\r\n    country_of_service: yup.string().required(),\r\n    category: yup.string().required(),\r\n    type: yup.string().required(),\r\n    free: yup.string().required(),\r\n    // locale: yup.string().required(),\r\n    price: yup.string().max(8, \"Price must be less than 8 digits number\"),\r\n    cover: yup\r\n      .mixed()\r\n      .test(\"fileSize\", \"The size of file must be less than 2MB\", (value) => {\r\n        if (!value || value?.fileList?.length === 0) {\r\n          return true;\r\n        }\r\n        if (value.fileList) {\r\n          return value.fileList[0].size / 1024 / 1024 < 2;\r\n        }\r\n        return true;\r\n      })\r\n\r\n      .test(\r\n        \"image-type\",\r\n        \"The type must be image/jpeg or image/png image/jpg\",\r\n        (value) => {\r\n          if (!value || value?.fileList?.length === 0) {\r\n            return true;\r\n          }\r\n          if (value.fileList) {\r\n            for (let file of value.fileList) {\r\n              if (\r\n                file.type === \"image/jpeg\" ||\r\n                file.type === \"image/png\" ||\r\n                file.type === \"image/jpg\"\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n    apkfile: yup\r\n      .mixed()\r\n      .test(\"fileSize\", \"The size of file must be less than 200MB\", (value) => {\r\n        if (!value || value?.fileList?.length === 0) {\r\n          return true;\r\n        }\r\n        if (value.fileList) {\r\n          return value.fileList[0].size / 1024 / 1024 < 200;\r\n        }\r\n        return true;\r\n      }),\r\n    // .test(\"apk-type\", \"The type must be apk\", async (value) => {\r\n    //   if (!value || value?.fileList?.length === 0) {\r\n    //     return true;\r\n    //   }\r\n    //   if (value.fileList) {\r\n    //     for (let file of value.fileList) {\r\n    //       if (file.type === \".apk\") {\r\n    //         return true;\r\n    //       } else {\r\n    //         return false;\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }),\r\n    images: yup\r\n      .mixed()\r\n      .test(\r\n        \"image-type\",\r\n        \"The type must be image/jpeg or image/png\",\r\n        (value) => {\r\n          if (!value || value?.fileList?.length === 0) {\r\n            return true;\r\n          }\r\n          if (value.fileList) {\r\n            for (let file of value.fileList) {\r\n              if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n      )\r\n      .test(\"fileLength\", \"You must upload max 8 images\", (value) => {\r\n        if (!value || value?.fileList?.length === 0) {\r\n          return true;\r\n        }\r\n\r\n        if (value?.fileList?.length > 8) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n  })\r\n  .required();\r\nexport const Types = [\r\n  {\r\n    locale_code: \"nft\",\r\n    title: \"NFT\",\r\n  },\r\n  {\r\n    locale_code: \"metaverse\",\r\n    title: \"Metaverse\",\r\n  },\r\n  {\r\n    locale_code: \"play-to-earn\",\r\n    title: \"Play To Earn\",\r\n  },\r\n];\r\nexport const Cost = [\r\n  {\r\n    locale_code: \"1\",\r\n    id: 1,\r\n    title: \"Pay\",\r\n  },\r\n  {\r\n    locale_code: \"0\",\r\n    id: 2,\r\n    title: \"Free\",\r\n  },\r\n];\r\nexport const InputFields = [\r\n  [\r\n    {\r\n      name: \"appid\",\r\n      label: \"App ID\",\r\n      placeholder: \"Enter App ID\",\r\n      disabled: true,\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Title\",\r\n      placeholder: \"Enter App Title\",\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      name: \"summary\",\r\n      label: \"Summary\",\r\n      placeholder: \"Enter Summary\",\r\n    },\r\n    {\r\n      name: \"full_description\",\r\n      label: \"Description\",\r\n      placeholder: \"Enter Description\",\r\n    },\r\n  ],\r\n\r\n  [\r\n    {\r\n      name: \"recent_change\",\r\n      label: \"Recent Change\",\r\n      placeholder: \"Enter Recent Change\",\r\n    },\r\n    {\r\n      name: \"app_version\",\r\n      label: \"App Version\",\r\n      placeholder: \"Enter App Version\",\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      name: \"privacy_policy\",\r\n      label: \"Privacy Policy\",\r\n      placeholder: \"Enter Privacy Policy\",\r\n    },\r\n    {\r\n      name: \"term_of_policy\",\r\n      label: \"Term Of Policy\",\r\n      placeholder: \"Enter Term Of Policy\",\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      name: \"app_support\",\r\n      label: \"App Support\",\r\n      placeholder: \"Enter App Support\",\r\n    },\r\n  ],\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const EditAppWrapper = styled.div`\r\n  padding: 1rem;\r\n  min-height: 100vh;\r\n  &&& {\r\n    .ant-form-item-label > label {\r\n      text-transform: uppercase;\r\n      margin: 2rem 0;\r\n      display: inline-block;\r\n      background: red;\r\n      padding: 5px 1rem;\r\n      border-radius: 5px;\r\n      box-shadow: rgb(0 0 0 / 24%) 0px 3px 8px;\r\n      color: white;\r\n      background-color: #007fff;\r\n      /* background-image: linear-gradient(18deg, #0093e9 0%, #80d0c7 100%); */\r\n    }\r\n    .ant-form-item-label {\r\n      width: 20%;\r\n      text-align: left;\r\n    }\r\n\r\n    .ant-select {\r\n      width: 100%;\r\n    }\r\n    .ant-select:not(.ant-select-customize-input) .ant-select-selector {\r\n      height: 4rem;\r\n      display: flex;\r\n      align-items: center;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    input.ant-input {\r\n      border: none;\r\n      border-bottom: 1px solid #d7d7d7;\r\n    }\r\n  }\r\n  form {\r\n    width: 80%;\r\n    margin: auto;\r\n    .error_message {\r\n      color: red;\r\n      margin-top: 1rem;\r\n    }\r\n    .locale {\r\n      margin-bottom: 2.4rem;\r\n      display: flex;\r\n      p {\r\n        width: 25%;\r\n      }\r\n    }\r\n  }\r\n  .row {\r\n    display: flex;\r\n    gap: 6rem;\r\n  }\r\n  .field-item {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    margin-bottom: 2rem;\r\n    box-shadow: rgb(0 0 0 / 24%) 0px 3px 8px;\r\n    border-radius: 5px;\r\n    input {\r\n      &:active,\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n    .fieldLabel {\r\n      text-transform: uppercase;\r\n      margin: 2rem 0;\r\n      display: inline-block;\r\n      background: red;\r\n      padding: 5px 1rem;\r\n      border-radius: 5px;\r\n      box-shadow: rgb(0 0 0 / 24%) 0px 3px 8px;\r\n      color: white;\r\n      background-color: #007fff;\r\n      /* background-image: linear-gradient(18deg, #0093e9 0%, #80d0c7 100%); */\r\n    }\r\n  }\r\n  .step_group {\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .btn-group {\r\n      display: flex;\r\n    }\r\n    .btn {\r\n      width: 30rem;\r\n    }\r\n  }\r\n  .cover-wrapper {\r\n    margin-top: 2rem;\r\n    text-transform: uppercase;\r\n  }\r\n  .cover {\r\n    width: 50%;\r\n    border-radius: 5px;\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  .screenshots-wrapper {\r\n    margin-top: 1rem;\r\n    .screenshots {\r\n      display: flex;\r\n      gap: 5rem;\r\n      flex-wrap: wrap;\r\n      flex-direction: column;\r\n      .image {\r\n        width: 100%;\r\n        display: flex;\r\n        padding: 1rem;\r\n        border-radius: 5px;\r\n        box-shadow: rgb(99 99 99 / 20%) 0px 2px 8px 0px;\r\n      }\r\n      .screenshot {\r\n        width: 20%;\r\n        aspect-ratio: 2/1;\r\n\r\n        img {\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { InboxOutlined } from \"@ant-design/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Form, Image, Input, Popconfirm, Select, Upload } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteScreenshot,\r\n  editApp,\r\n  getCategoriesAndLanguage,\r\n  getDetailAppWithLange,\r\n} from \"../../../../redux/slice/detailApp.slice\";\r\n\r\nimport { ConvertToFormData } from \"../../../../helpers/formData\";\r\nimport Loading from \"../../../../layout/components/Loading/Loading\";\r\nimport { getFileName, URL_API } from \"../../../../utils\";\r\nimport UploadSingleAvatar from \"../UploadSingleAvatar/UploadSingleAvatar\";\r\nimport { Cost, InputFields, schema, Types } from \"./constant\";\r\nimport { EditAppWrapper } from \"./styled\";\r\nconst { Dragger } = Upload;\r\n\r\nexport default function EditApp() {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const {\r\n    getValues,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      price: null,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const {\r\n    languages,\r\n    categories,\r\n    isLoading,\r\n    detailAppWithLang,\r\n    isLoadingDeleteScreenshot,\r\n    isLoadingEditApp,\r\n  } = useSelector((state) => state.detailApp);\r\n  const [isAppFree, setIsAppFree] = useState(true);\r\n  const [locale, setLocale] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const SelectField = [\r\n    [\r\n      {\r\n        name: \"category\",\r\n        label: \"Category\",\r\n        data: categories,\r\n      },\r\n      {\r\n        name: \"type\",\r\n        label: \"Type\",\r\n        data: Types,\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        name: \"free\",\r\n        label: \"Cost\",\r\n        data: Cost,\r\n      },\r\n\r\n      {\r\n        name: \"country_of_service\",\r\n        label: \"Country Of Service\",\r\n        data: languages,\r\n      },\r\n    ],\r\n  ];\r\n  const renderOption = (data) => {\r\n    const mainOption = data.data?.map((item) => {\r\n      return {\r\n        value: item.locale_code || item.id,\r\n        label: item.language || item.title,\r\n      };\r\n    });\r\n    const res = [\r\n      {\r\n        value: \"\",\r\n        label: `Select App ${data.label}`,\r\n        disabled: true,\r\n      },\r\n      ...mainOption,\r\n    ];\r\n    return res;\r\n  };\r\n\r\n  const propsUploadAvatar = {\r\n    listType: \"picture\",\r\n    accept: \"image/png, image/jpeg\",\r\n    multiple: false,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange: (info) => {},\r\n    onDrop(e) {},\r\n  };\r\n  const handleGetDetailApp = () => {\r\n    dispatch(getDetailAppWithLange({ slug: params?.slug, lang: locale }));\r\n  };\r\n  const redirectToAccount = () => {\r\n    navigate(\"/account\");\r\n  };\r\n  const submitForm = (value) => {\r\n    let payload = Object.assign(getValues(), { locale });\r\n    if (!isAppFree && payload.price === undefined) {\r\n      setError(\"price\", {\r\n        type: \"required\",\r\n        message: \"Price is required when you set app is Pay\",\r\n      });\r\n      return;\r\n    }\r\n    if (!detailAppWithLang?.data?.app?.screenshots && !payload.images) {\r\n      setError(\"images\", {\r\n        type: \"required\",\r\n        message: \"Images is required\",\r\n      });\r\n      return;\r\n    }\r\n    const keys = Object.keys(payload);\r\n    for (let v of keys) {\r\n      if (v === \"cover\") {\r\n        if (payload[\"cover\"]?.file) {\r\n          payload[\"cover\"] = payload[\"cover\"].file?.originFileObj;\r\n        } else {\r\n          payload.cover = detailAppWithLang?.data?.app?.cover;\r\n        }\r\n      } else if (v === \"apkfile\") {\r\n        if (payload[\"apkfile\"]?.file) {\r\n          payload[\"apkfile\"] = payload[\"apkfile\"].file?.originFileObj;\r\n        } else {\r\n          payload[\"apkfile\"] = detailAppWithLang?.data?.app?.file_apk;\r\n        }\r\n      } else if (v === \"images\") {\r\n        if (payload[\"images\"]?.fileList) {\r\n          payload[\"images\"] = [...payload[\"images\"].fileList];\r\n        }\r\n      }\r\n    }\r\n    const formData = ConvertToFormData(payload);\r\n    dispatch(editApp({ data: formData, callBack: redirectToAccount }));\r\n  };\r\n  const handleChangeAppCost = (value) => {\r\n    setValue(\"free\", value);\r\n    if (value === \"1\") {\r\n      setIsAppFree(false);\r\n    } else if (value === \"0\") {\r\n      setIsAppFree(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteScreenshot = (imgUrl) => {\r\n    dispatch(\r\n      deleteScreenshot({\r\n        name_image: imgUrl,\r\n        appid: detailAppWithLang?.data?.app?.appid,\r\n        reload: handleGetDetailApp,\r\n      })\r\n    );\r\n  };\r\n  // Initial value of form\r\n  useEffect(() => {\r\n    const formKeys = Object.keys(getValues());\r\n    const resetValue = {};\r\n    if (detailAppWithLang) {\r\n      if (detailAppWithLang?.data?.app?.is_pay === \"1\") {\r\n        setIsAppFree(false);\r\n      } else if (detailAppWithLang?.data?.app?.is_pay === \"0\") {\r\n        setIsAppFree(true);\r\n      }\r\n      for (let v of formKeys) {\r\n        if (v === \"locale\") {\r\n          resetValue[v] = \"\";\r\n        } else if (v === \"cover\" || v === \"images\" || v === \"apkfile\") {\r\n          continue;\r\n        } else if (v === \"type\") {\r\n          switch (detailAppWithLang?.data?.app?.type) {\r\n            case \"1\":\r\n              resetValue[v] = \"nft\";\r\n              break;\r\n            case \"2\":\r\n              resetValue[v] = \"metaverse\";\r\n              break;\r\n            default:\r\n              resetValue[v] = \"play-to-earn\";\r\n              break;\r\n          }\r\n        } else if (v === \"full_description\") {\r\n          if (detailAppWithLang?.data.info) {\r\n            resetValue[v] = detailAppWithLang?.data?.info[\"description\"];\r\n          } else {\r\n            resetValue[v] = \"\";\r\n          }\r\n        } else if (v === \"country_of_service\") {\r\n          if (detailAppWithLang?.data.info) {\r\n            resetValue[v] = detailAppWithLang?.data?.info[\"country\"];\r\n          } else {\r\n            resetValue[v] = \"\";\r\n          }\r\n        } else if (v === \"free\") {\r\n          resetValue[v] = detailAppWithLang?.data?.app?.is_pay;\r\n        } else {\r\n          if (detailAppWithLang?.data?.info) {\r\n            resetValue[v] =\r\n              detailAppWithLang?.data?.app[v] ||\r\n              detailAppWithLang?.data?.info[v] ||\r\n              \"\";\r\n          } else {\r\n            resetValue[v] = detailAppWithLang?.data?.app[v] || \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    resetValue[\"price\"] = Number(detailAppWithLang?.data?.app?.price).toFixed(\r\n      0\r\n    );\r\n    reset(resetValue);\r\n  }, [detailAppWithLang, getValues]);\r\n  useEffect(() => {\r\n    dispatch(getCategoriesAndLanguage());\r\n  }, []);\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }, []);\r\n  return (\r\n    <EditAppWrapper>\r\n      <h1 style={{ textAlign: \"center\" }}>EDIT APP</h1>\r\n      <Form onFinish={handleSubmit(submitForm)}>\r\n        {Object.keys(languages).length > 0 ? (\r\n          <div className=\"locale\">\r\n            <p>Locale :</p>\r\n            <Select\r\n              defaultValue=\"\"\r\n              onChange={(e) => {\r\n                reset({});\r\n                setLocale(e);\r\n                dispatch(\r\n                  getDetailAppWithLange({ slug: params?.slug, lang: e })\r\n                );\r\n              }}\r\n              options={[\r\n                {\r\n                  value: \"\",\r\n                  label: \"Choo App locale to edit\",\r\n                  disabled: true,\r\n                },\r\n                ...languages.map((item, index) => {\r\n                  return {\r\n                    value: item.code,\r\n                    label: item.language,\r\n                  };\r\n                }),\r\n              ]}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n        {locale && (\r\n          <>\r\n            {InputFields.map((row, index) => {\r\n              return (\r\n                <div className=\"row\" key={index}>\r\n                  {row.map((item, index) => {\r\n                    return (\r\n                      <Controller\r\n                        key={index}\r\n                        control={control}\r\n                        name={item.name}\r\n                        render={({ field }) => (\r\n                          <div className=\"field-item\">\r\n                            <label className=\"fieldLabel\">{item.label} :</label>\r\n                            <Input\r\n                              disabled={item?.disabled || false}\r\n                              {...field}\r\n                              placeholder={item.placeholder}\r\n                              type={item.type || \"text\"}\r\n                            />\r\n                            <p className=\"error_message\">\r\n                              {errors[item.name]?.message}\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n            {SelectField.map((row, index) => {\r\n              return (\r\n                <div className=\"row\" key={index}>\r\n                  {row.map((item, index) => {\r\n                    return (\r\n                      <Controller\r\n                        key={index}\r\n                        control={control}\r\n                        name={item.name}\r\n                        render={({ field }) => (\r\n                          <div className=\"field-item\">\r\n                            <label className=\"fieldLabel\">{item.label} :</label>\r\n                            <Select\r\n                              {...field}\r\n                              defaultValue=\"\"\r\n                              onChange={\r\n                                item.name === \"free\"\r\n                                  ? handleChangeAppCost\r\n                                  : field.onChange\r\n                              }\r\n                              options={renderOption(item)}\r\n                            />\r\n                            <p className=\"error_message\">\r\n                              {errors[item.name]?.message}\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n            {!isAppFree && (\r\n              <div className=\"field-item\">\r\n                {\" \"}\r\n                <Controller\r\n                  style={{ width: \"100%\" }}\r\n                  control={control}\r\n                  name=\"price\"\r\n                  render={({ field }) => (\r\n                    <Form.Item label=\"App Price\">\r\n                      <Input\r\n                        {...field}\r\n                        placeholder=\"Enter App price\"\r\n                        type=\"number\"\r\n                      />\r\n                      <p className=\"error_message\">{errors?.price?.message}</p>\r\n                    </Form.Item>\r\n                  )}\r\n                />\r\n              </div>\r\n            )}\r\n            <UploadSingleAvatar\r\n              control={control}\r\n              defaultAvatar={detailAppWithLang?.data?.app?.cover}\r\n              errMessage={errors?.cover?.message}\r\n              name=\"cover\"\r\n              label=\"App Cover\"\r\n            />\r\n            <Controller\r\n              control={control}\r\n              name=\"images\"\r\n              render={({ field }) => (\r\n                <Form.Item label=\"App Images\">\r\n                  <Dragger\r\n                    {...propsUploadAvatar}\r\n                    {...field}\r\n                    multiple={true}\r\n                    listType=\"picture\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                  >\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">\r\n                      Click or drag file to this area to upload\r\n                    </p>\r\n                    <p className=\"ant-upload-hint\">\r\n                      Upload your new app's screenshot\r\n                    </p>\r\n                  </Dragger>\r\n                  <div className=\"note\">\r\n                    <p className=\"hint\">\r\n                      You must upload max\r\n                      <span className=\"special\"> 8 images</span>\r\n                    </p>\r\n                    <p className=\"hint\">\r\n                      The type must be{\" \"}\r\n                      <span className=\"special\">image/jpeg</span> or\r\n                      <span className=\"special\"> image/png</span> or\r\n                      <span className=\"special\"> image/jpg</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"screenshots-wrapper\">\r\n                    <p\r\n                      style={{\r\n                        textTransform: \"uppercase\",\r\n                        margin: \"3rem 0\",\r\n                      }}\r\n                    >\r\n                      Current Screenshots:{\" \"}\r\n                    </p>\r\n                    {!isLoadingDeleteScreenshot ? (\r\n                      <div className=\"screenshots\">\r\n                        {detailAppWithLang?.data?.app?.screenshots ? (\r\n                          JSON.parse(\r\n                            detailAppWithLang?.data?.app?.screenshots\r\n                          ).map((item, index) => {\r\n                            return (\r\n                              <div className=\"image\" key={index}>\r\n                                <Image\r\n                                  key={index}\r\n                                  className=\"screenshot\"\r\n                                  style={{\r\n                                    marginTop: \"1rem\",\r\n                                    borderRadius: \"1rem\",\r\n                                  }}\r\n                                  preview={false}\r\n                                  src={`${URL_API}${item}`}\r\n                                  alt=\"screenshot\"\r\n                                />\r\n\r\n                                <Popconfirm\r\n                                  title=\"Are you sure wanna delete this image？\"\r\n                                  okText=\"Yes\"\r\n                                  cancelText=\"No\"\r\n                                  onConfirm={() => handleDeleteScreenshot(item)}\r\n                                >\r\n                                  <Button\r\n                                    type=\"danger\"\r\n                                    onClick={() => handleDeleteScreenshot(item)}\r\n                                  >\r\n                                    x\r\n                                  </Button>\r\n                                </Popconfirm>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        ) : (\r\n                          <p>Nothing</p>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <Loading />\r\n                    )}\r\n                  </div>\r\n\r\n                  <p className=\"error_message\">{errors.images?.message}</p>\r\n                </Form.Item>\r\n              )}\r\n            />\r\n            <Controller\r\n              control={control}\r\n              name=\"apkfile\"\r\n              render={({ field }) => (\r\n                <Form.Item label=\"App Apk\">\r\n                  <Dragger\r\n                    {...field}\r\n                    multiple={false}\r\n                    accept=\".apk\"\r\n                    maxCount={1}\r\n                  >\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                      <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">\r\n                      Click or drag file to this area to upload\r\n                    </p>\r\n                    <p className=\"ant-upload-hint\">Upload your new apk</p>\r\n                  </Dragger>\r\n                  <div className=\"note\">\r\n                    <p className=\"hint\">\r\n                      The size of file must be less than\r\n                      <span className=\"special\"> 200MB</span>\r\n                    </p>\r\n                    <p className=\"hint\">\r\n                      The type must be <span className=\"special\">APK</span>\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"error_message\">{errors.apkfile?.message}</p>\r\n                  {detailAppWithLang?.data?.app?.file_apk && (\r\n                    <p\r\n                      style={{\r\n                        border: \"1px dashed black\",\r\n                        padding: \"1rem\",\r\n                        marginTop: \"2rem\",\r\n                        cursor: \"not-allowed\",\r\n                      }}\r\n                    >\r\n                      {getFileName(detailAppWithLang?.data?.app?.file_apk)}\r\n                    </p>\r\n                  )}\r\n                </Form.Item>\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {locale !== \"\" && (\r\n          <Button htmlType=\"submit\" loading={isLoadingEditApp}>\r\n            Update App\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </EditAppWrapper>\r\n  );\r\n}\r\n"],"names":["Dragger","Upload","UploadSingleAvatar","control","defaultAvatar","errMessage","name","label","propsUploadSingleAvatar","listType","accept","multiple","action","onChange","info","onDrop","e","render","field","maxCount","className","InboxOutlined","preview","src","URL_API","alt","schema","yup","title","required","appid","summary","max","full_description","country_of_service","category","type","free","price","cover","test","value","fileList","length","size","file","apkfile","images","Types","locale_code","Cost","id","InputFields","placeholder","disabled","EditAppWrapper","styled","EditApp","dispatch","useDispatch","params","useParams","useForm","defaultValues","resolver","yupResolver","getValues","handleSubmit","reset","setError","setValue","errors","formState","useSelector","state","detailApp","languages","categories","detailAppWithLang","isLoading","isLoadingDeleteScreenshot","isLoadingEditApp","useState","isAppFree","setIsAppFree","locale","setLocale","navigate","useNavigate","SelectField","data","renderOption","mainOption","map","item","language","propsUploadAvatar","handleGetDetailApp","getDetailAppWithLange","slug","lang","redirectToAccount","handleChangeAppCost","handleDeleteScreenshot","imgUrl","deleteScreenshot","name_image","app","reload","useEffect","formKeys","Object","keys","resetValue","is_pay","v","Number","toFixed","getCategoriesAndLanguage","window","scrollTo","top","behavior","style","textAlign","onFinish","payload","assign","undefined","screenshots","originFileObj","file_apk","formData","ConvertToFormData","editApp","callBack","message","defaultValue","options","index","code","Loading","row","width","textTransform","margin","JSON","parse","marginTop","borderRadius","okText","cancelText","onConfirm","onClick","border","padding","cursor","getFileName","htmlType","loading"],"sourceRoot":""}